import gql from 'graphql-tag';
import { Injectable } from '@angular/core';
import * as Apollo from 'apollo-angular';
export type Maybe<T> = T | null;
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string,
  String: string,
  Boolean: boolean,
  Int: number,
  Float: number,
  DateTime: any,
  Decimal: any,
  Date: any,
  DateTimeOffset: any,
  Seconds: any,
  Milliseconds: any,
};



export type AliasPart = {
   __typename?: 'AliasPart',
  alias?: Maybe<Scalars['String']>,
};

export type AliasPartInput = {
  alias?: Maybe<Scalars['String']>,
  alias_not?: Maybe<Scalars['String']>,
  alias_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  alias_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  alias_contains?: Maybe<Scalars['String']>,
  alias_not_contains?: Maybe<Scalars['String']>,
  alias_starts_with?: Maybe<Scalars['String']>,
  alias_not_starts_with?: Maybe<Scalars['String']>,
  alias_ends_with?: Maybe<Scalars['String']>,
  alias_not_ends_with?: Maybe<Scalars['String']>,
};

export type Article = ContentItem & {
   __typename?: 'Article',
  author: Scalars['String'],
  contentItemId: Scalars['String'],
  contentItemVersionId: Scalars['String'],
  contentType: Scalars['String'],
  createdUtc?: Maybe<Scalars['DateTime']>,
  displayText: Scalars['String'],
  htmlBody?: Maybe<HtmlBodyPart>,
  latest: Scalars['Boolean'],
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  owner: Scalars['String'],
  path: Scalars['String'],
  published: Scalars['Boolean'],
  publishedUtc?: Maybe<Scalars['DateTime']>,
  render?: Maybe<Scalars['String']>,
  subtitle?: Maybe<Scalars['String']>,
};

export type ArticleOrderByInput = {
  contentItemId?: Maybe<OrderByDirection>,
  contentItemVersionId?: Maybe<OrderByDirection>,
  contentType?: Maybe<OrderByDirection>,
  displayText?: Maybe<OrderByDirection>,
  published?: Maybe<OrderByDirection>,
  latest?: Maybe<OrderByDirection>,
  createdUtc?: Maybe<OrderByDirection>,
  modifiedUtc?: Maybe<OrderByDirection>,
  publishedUtc?: Maybe<OrderByDirection>,
  owner?: Maybe<OrderByDirection>,
  author?: Maybe<OrderByDirection>,
};

export type ArticleWhereInput = {
  contentItemId?: Maybe<Scalars['ID']>,
  contentItemId_not?: Maybe<Scalars['ID']>,
  contentItemId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId?: Maybe<Scalars['ID']>,
  contentItemVersionId_not?: Maybe<Scalars['ID']>,
  contentItemVersionId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  displayText?: Maybe<Scalars['String']>,
  displayText_not?: Maybe<Scalars['String']>,
  displayText_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_contains?: Maybe<Scalars['String']>,
  displayText_not_contains?: Maybe<Scalars['String']>,
  displayText_starts_with?: Maybe<Scalars['String']>,
  displayText_not_starts_with?: Maybe<Scalars['String']>,
  displayText_ends_with?: Maybe<Scalars['String']>,
  displayText_not_ends_with?: Maybe<Scalars['String']>,
  createdUtc?: Maybe<Scalars['DateTime']>,
  createdUtc_not?: Maybe<Scalars['DateTime']>,
  createdUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_gt?: Maybe<Scalars['DateTime']>,
  createdUtc_gte?: Maybe<Scalars['DateTime']>,
  createdUtc_lt?: Maybe<Scalars['DateTime']>,
  createdUtc_lte?: Maybe<Scalars['DateTime']>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  modifiedUtc_not?: Maybe<Scalars['DateTime']>,
  modifiedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_gt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_gte?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lte?: Maybe<Scalars['DateTime']>,
  publishedUtc?: Maybe<Scalars['DateTime']>,
  publishedUtc_not?: Maybe<Scalars['DateTime']>,
  publishedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_gt?: Maybe<Scalars['DateTime']>,
  publishedUtc_gte?: Maybe<Scalars['DateTime']>,
  publishedUtc_lt?: Maybe<Scalars['DateTime']>,
  publishedUtc_lte?: Maybe<Scalars['DateTime']>,
  owner?: Maybe<Scalars['String']>,
  owner_not?: Maybe<Scalars['String']>,
  owner_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_contains?: Maybe<Scalars['String']>,
  owner_not_contains?: Maybe<Scalars['String']>,
  owner_starts_with?: Maybe<Scalars['String']>,
  owner_not_starts_with?: Maybe<Scalars['String']>,
  owner_ends_with?: Maybe<Scalars['String']>,
  owner_not_ends_with?: Maybe<Scalars['String']>,
  author?: Maybe<Scalars['String']>,
  author_not?: Maybe<Scalars['String']>,
  author_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_contains?: Maybe<Scalars['String']>,
  author_not_contains?: Maybe<Scalars['String']>,
  author_starts_with?: Maybe<Scalars['String']>,
  author_not_starts_with?: Maybe<Scalars['String']>,
  author_ends_with?: Maybe<Scalars['String']>,
  author_not_ends_with?: Maybe<Scalars['String']>,
  OR?: Maybe<Array<Maybe<ArticleWhereInput>>>,
  AND?: Maybe<Array<Maybe<ArticleWhereInput>>>,
  NOT?: Maybe<Array<Maybe<ArticleWhereInput>>>,
  path?: Maybe<Scalars['String']>,
  path_not?: Maybe<Scalars['String']>,
  path_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  path_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  path_contains?: Maybe<Scalars['String']>,
  path_not_contains?: Maybe<Scalars['String']>,
  path_starts_with?: Maybe<Scalars['String']>,
  path_not_starts_with?: Maybe<Scalars['String']>,
  path_ends_with?: Maybe<Scalars['String']>,
  path_not_ends_with?: Maybe<Scalars['String']>,
};

export type AutoroutePart = {
   __typename?: 'AutoroutePart',
  path: Scalars['String'],
};

export type AutoroutePartInput = {
  path?: Maybe<Scalars['String']>,
  path_not?: Maybe<Scalars['String']>,
  path_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  path_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  path_contains?: Maybe<Scalars['String']>,
  path_not_contains?: Maybe<Scalars['String']>,
  path_starts_with?: Maybe<Scalars['String']>,
  path_not_starts_with?: Maybe<Scalars['String']>,
  path_ends_with?: Maybe<Scalars['String']>,
  path_not_ends_with?: Maybe<Scalars['String']>,
};

export type BagPart = {
   __typename?: 'BagPart',
  contentItems?: Maybe<Array<Maybe<ContentItem>>>,
};


export type BagPartContentItemsArgs = {
  first?: Maybe<Scalars['Int']>,
  last?: Maybe<Scalars['Int']>,
  skip?: Maybe<Scalars['Int']>
};

export type Blockquote = ContentItem & {
   __typename?: 'Blockquote',
  author: Scalars['String'],
  contentItemId: Scalars['String'],
  contentItemVersionId: Scalars['String'],
  contentType: Scalars['String'],
  createdUtc?: Maybe<Scalars['DateTime']>,
  displayText: Scalars['String'],
  latest: Scalars['Boolean'],
  metadata?: Maybe<FlowMetadata>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  owner: Scalars['String'],
  published: Scalars['Boolean'],
  publishedUtc?: Maybe<Scalars['DateTime']>,
  quote?: Maybe<Scalars['String']>,
  render?: Maybe<Scalars['String']>,
};

export type BlockquoteOrderByInput = {
  contentItemId?: Maybe<OrderByDirection>,
  contentItemVersionId?: Maybe<OrderByDirection>,
  contentType?: Maybe<OrderByDirection>,
  displayText?: Maybe<OrderByDirection>,
  published?: Maybe<OrderByDirection>,
  latest?: Maybe<OrderByDirection>,
  createdUtc?: Maybe<OrderByDirection>,
  modifiedUtc?: Maybe<OrderByDirection>,
  publishedUtc?: Maybe<OrderByDirection>,
  owner?: Maybe<OrderByDirection>,
  author?: Maybe<OrderByDirection>,
};

export type BlockquoteWhereInput = {
  contentItemId?: Maybe<Scalars['ID']>,
  contentItemId_not?: Maybe<Scalars['ID']>,
  contentItemId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId?: Maybe<Scalars['ID']>,
  contentItemVersionId_not?: Maybe<Scalars['ID']>,
  contentItemVersionId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  displayText?: Maybe<Scalars['String']>,
  displayText_not?: Maybe<Scalars['String']>,
  displayText_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_contains?: Maybe<Scalars['String']>,
  displayText_not_contains?: Maybe<Scalars['String']>,
  displayText_starts_with?: Maybe<Scalars['String']>,
  displayText_not_starts_with?: Maybe<Scalars['String']>,
  displayText_ends_with?: Maybe<Scalars['String']>,
  displayText_not_ends_with?: Maybe<Scalars['String']>,
  createdUtc?: Maybe<Scalars['DateTime']>,
  createdUtc_not?: Maybe<Scalars['DateTime']>,
  createdUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_gt?: Maybe<Scalars['DateTime']>,
  createdUtc_gte?: Maybe<Scalars['DateTime']>,
  createdUtc_lt?: Maybe<Scalars['DateTime']>,
  createdUtc_lte?: Maybe<Scalars['DateTime']>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  modifiedUtc_not?: Maybe<Scalars['DateTime']>,
  modifiedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_gt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_gte?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lte?: Maybe<Scalars['DateTime']>,
  publishedUtc?: Maybe<Scalars['DateTime']>,
  publishedUtc_not?: Maybe<Scalars['DateTime']>,
  publishedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_gt?: Maybe<Scalars['DateTime']>,
  publishedUtc_gte?: Maybe<Scalars['DateTime']>,
  publishedUtc_lt?: Maybe<Scalars['DateTime']>,
  publishedUtc_lte?: Maybe<Scalars['DateTime']>,
  owner?: Maybe<Scalars['String']>,
  owner_not?: Maybe<Scalars['String']>,
  owner_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_contains?: Maybe<Scalars['String']>,
  owner_not_contains?: Maybe<Scalars['String']>,
  owner_starts_with?: Maybe<Scalars['String']>,
  owner_not_starts_with?: Maybe<Scalars['String']>,
  owner_ends_with?: Maybe<Scalars['String']>,
  owner_not_ends_with?: Maybe<Scalars['String']>,
  author?: Maybe<Scalars['String']>,
  author_not?: Maybe<Scalars['String']>,
  author_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_contains?: Maybe<Scalars['String']>,
  author_not_contains?: Maybe<Scalars['String']>,
  author_starts_with?: Maybe<Scalars['String']>,
  author_not_starts_with?: Maybe<Scalars['String']>,
  author_ends_with?: Maybe<Scalars['String']>,
  author_not_ends_with?: Maybe<Scalars['String']>,
  OR?: Maybe<Array<Maybe<BlockquoteWhereInput>>>,
  AND?: Maybe<Array<Maybe<BlockquoteWhereInput>>>,
  NOT?: Maybe<Array<Maybe<BlockquoteWhereInput>>>,
};

export type Blog = ContentItem & {
   __typename?: 'Blog',
  author: Scalars['String'],
  contentItemId: Scalars['String'],
  contentItemVersionId: Scalars['String'],
  contentType: Scalars['String'],
  createdUtc?: Maybe<Scalars['DateTime']>,
  displayText: Scalars['String'],
  htmlBody?: Maybe<HtmlBodyPart>,
  image?: Maybe<MediaField>,
  latest: Scalars['Boolean'],
  list?: Maybe<ListPart>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  owner: Scalars['String'],
  path: Scalars['String'],
  published: Scalars['Boolean'],
  publishedUtc?: Maybe<Scalars['DateTime']>,
  render?: Maybe<Scalars['String']>,
};

export type BlogOrderByInput = {
  contentItemId?: Maybe<OrderByDirection>,
  contentItemVersionId?: Maybe<OrderByDirection>,
  contentType?: Maybe<OrderByDirection>,
  displayText?: Maybe<OrderByDirection>,
  published?: Maybe<OrderByDirection>,
  latest?: Maybe<OrderByDirection>,
  createdUtc?: Maybe<OrderByDirection>,
  modifiedUtc?: Maybe<OrderByDirection>,
  publishedUtc?: Maybe<OrderByDirection>,
  owner?: Maybe<OrderByDirection>,
  author?: Maybe<OrderByDirection>,
};

export type BlogPost = ContentItem & {
   __typename?: 'BlogPost',
  author: Scalars['String'],
  contentItemId: Scalars['String'],
  contentItemVersionId: Scalars['String'],
  contentType: Scalars['String'],
  createdUtc?: Maybe<Scalars['DateTime']>,
  displayText: Scalars['String'],
  image?: Maybe<MediaField>,
  latest: Scalars['Boolean'],
  markdownBody?: Maybe<MarkdownBodyPart>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  owner: Scalars['String'],
  path: Scalars['String'],
  published: Scalars['Boolean'],
  publishedUtc?: Maybe<Scalars['DateTime']>,
  render?: Maybe<Scalars['String']>,
  subtitle?: Maybe<Scalars['String']>,
};

export type BlogPostOrderByInput = {
  contentItemId?: Maybe<OrderByDirection>,
  contentItemVersionId?: Maybe<OrderByDirection>,
  contentType?: Maybe<OrderByDirection>,
  displayText?: Maybe<OrderByDirection>,
  published?: Maybe<OrderByDirection>,
  latest?: Maybe<OrderByDirection>,
  createdUtc?: Maybe<OrderByDirection>,
  modifiedUtc?: Maybe<OrderByDirection>,
  publishedUtc?: Maybe<OrderByDirection>,
  owner?: Maybe<OrderByDirection>,
  author?: Maybe<OrderByDirection>,
};

export type BlogPostWhereInput = {
  contentItemId?: Maybe<Scalars['ID']>,
  contentItemId_not?: Maybe<Scalars['ID']>,
  contentItemId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId?: Maybe<Scalars['ID']>,
  contentItemVersionId_not?: Maybe<Scalars['ID']>,
  contentItemVersionId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  displayText?: Maybe<Scalars['String']>,
  displayText_not?: Maybe<Scalars['String']>,
  displayText_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_contains?: Maybe<Scalars['String']>,
  displayText_not_contains?: Maybe<Scalars['String']>,
  displayText_starts_with?: Maybe<Scalars['String']>,
  displayText_not_starts_with?: Maybe<Scalars['String']>,
  displayText_ends_with?: Maybe<Scalars['String']>,
  displayText_not_ends_with?: Maybe<Scalars['String']>,
  createdUtc?: Maybe<Scalars['DateTime']>,
  createdUtc_not?: Maybe<Scalars['DateTime']>,
  createdUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_gt?: Maybe<Scalars['DateTime']>,
  createdUtc_gte?: Maybe<Scalars['DateTime']>,
  createdUtc_lt?: Maybe<Scalars['DateTime']>,
  createdUtc_lte?: Maybe<Scalars['DateTime']>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  modifiedUtc_not?: Maybe<Scalars['DateTime']>,
  modifiedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_gt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_gte?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lte?: Maybe<Scalars['DateTime']>,
  publishedUtc?: Maybe<Scalars['DateTime']>,
  publishedUtc_not?: Maybe<Scalars['DateTime']>,
  publishedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_gt?: Maybe<Scalars['DateTime']>,
  publishedUtc_gte?: Maybe<Scalars['DateTime']>,
  publishedUtc_lt?: Maybe<Scalars['DateTime']>,
  publishedUtc_lte?: Maybe<Scalars['DateTime']>,
  owner?: Maybe<Scalars['String']>,
  owner_not?: Maybe<Scalars['String']>,
  owner_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_contains?: Maybe<Scalars['String']>,
  owner_not_contains?: Maybe<Scalars['String']>,
  owner_starts_with?: Maybe<Scalars['String']>,
  owner_not_starts_with?: Maybe<Scalars['String']>,
  owner_ends_with?: Maybe<Scalars['String']>,
  owner_not_ends_with?: Maybe<Scalars['String']>,
  author?: Maybe<Scalars['String']>,
  author_not?: Maybe<Scalars['String']>,
  author_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_contains?: Maybe<Scalars['String']>,
  author_not_contains?: Maybe<Scalars['String']>,
  author_starts_with?: Maybe<Scalars['String']>,
  author_not_starts_with?: Maybe<Scalars['String']>,
  author_ends_with?: Maybe<Scalars['String']>,
  author_not_ends_with?: Maybe<Scalars['String']>,
  OR?: Maybe<Array<Maybe<BlogPostWhereInput>>>,
  AND?: Maybe<Array<Maybe<BlogPostWhereInput>>>,
  NOT?: Maybe<Array<Maybe<BlogPostWhereInput>>>,
  path?: Maybe<Scalars['String']>,
  path_not?: Maybe<Scalars['String']>,
  path_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  path_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  path_contains?: Maybe<Scalars['String']>,
  path_not_contains?: Maybe<Scalars['String']>,
  path_starts_with?: Maybe<Scalars['String']>,
  path_not_starts_with?: Maybe<Scalars['String']>,
  path_ends_with?: Maybe<Scalars['String']>,
  path_not_ends_with?: Maybe<Scalars['String']>,
};

export type BlogWhereInput = {
  contentItemId?: Maybe<Scalars['ID']>,
  contentItemId_not?: Maybe<Scalars['ID']>,
  contentItemId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId?: Maybe<Scalars['ID']>,
  contentItemVersionId_not?: Maybe<Scalars['ID']>,
  contentItemVersionId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  displayText?: Maybe<Scalars['String']>,
  displayText_not?: Maybe<Scalars['String']>,
  displayText_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_contains?: Maybe<Scalars['String']>,
  displayText_not_contains?: Maybe<Scalars['String']>,
  displayText_starts_with?: Maybe<Scalars['String']>,
  displayText_not_starts_with?: Maybe<Scalars['String']>,
  displayText_ends_with?: Maybe<Scalars['String']>,
  displayText_not_ends_with?: Maybe<Scalars['String']>,
  createdUtc?: Maybe<Scalars['DateTime']>,
  createdUtc_not?: Maybe<Scalars['DateTime']>,
  createdUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_gt?: Maybe<Scalars['DateTime']>,
  createdUtc_gte?: Maybe<Scalars['DateTime']>,
  createdUtc_lt?: Maybe<Scalars['DateTime']>,
  createdUtc_lte?: Maybe<Scalars['DateTime']>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  modifiedUtc_not?: Maybe<Scalars['DateTime']>,
  modifiedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_gt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_gte?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lte?: Maybe<Scalars['DateTime']>,
  publishedUtc?: Maybe<Scalars['DateTime']>,
  publishedUtc_not?: Maybe<Scalars['DateTime']>,
  publishedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_gt?: Maybe<Scalars['DateTime']>,
  publishedUtc_gte?: Maybe<Scalars['DateTime']>,
  publishedUtc_lt?: Maybe<Scalars['DateTime']>,
  publishedUtc_lte?: Maybe<Scalars['DateTime']>,
  owner?: Maybe<Scalars['String']>,
  owner_not?: Maybe<Scalars['String']>,
  owner_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_contains?: Maybe<Scalars['String']>,
  owner_not_contains?: Maybe<Scalars['String']>,
  owner_starts_with?: Maybe<Scalars['String']>,
  owner_not_starts_with?: Maybe<Scalars['String']>,
  owner_ends_with?: Maybe<Scalars['String']>,
  owner_not_ends_with?: Maybe<Scalars['String']>,
  author?: Maybe<Scalars['String']>,
  author_not?: Maybe<Scalars['String']>,
  author_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_contains?: Maybe<Scalars['String']>,
  author_not_contains?: Maybe<Scalars['String']>,
  author_starts_with?: Maybe<Scalars['String']>,
  author_not_starts_with?: Maybe<Scalars['String']>,
  author_ends_with?: Maybe<Scalars['String']>,
  author_not_ends_with?: Maybe<Scalars['String']>,
  OR?: Maybe<Array<Maybe<BlogWhereInput>>>,
  AND?: Maybe<Array<Maybe<BlogWhereInput>>>,
  NOT?: Maybe<Array<Maybe<BlogWhereInput>>>,
  path?: Maybe<Scalars['String']>,
  path_not?: Maybe<Scalars['String']>,
  path_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  path_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  path_contains?: Maybe<Scalars['String']>,
  path_not_contains?: Maybe<Scalars['String']>,
  path_starts_with?: Maybe<Scalars['String']>,
  path_not_starts_with?: Maybe<Scalars['String']>,
  path_ends_with?: Maybe<Scalars['String']>,
  path_not_ends_with?: Maybe<Scalars['String']>,
};

export type Button = ContentItem & {
   __typename?: 'Button',
  author: Scalars['String'],
  button?: Maybe<ButtonPart>,
  contentItemId: Scalars['String'],
  contentItemVersionId: Scalars['String'],
  contentType: Scalars['String'],
  createdUtc?: Maybe<Scalars['DateTime']>,
  displayText: Scalars['String'],
  formElement?: Maybe<FormElementPart>,
  formInputElement?: Maybe<FormInputElementPart>,
  latest: Scalars['Boolean'],
  metadata?: Maybe<FlowMetadata>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  owner: Scalars['String'],
  published: Scalars['Boolean'],
  publishedUtc?: Maybe<Scalars['DateTime']>,
  render?: Maybe<Scalars['String']>,
};

export type ButtonOrderByInput = {
  contentItemId?: Maybe<OrderByDirection>,
  contentItemVersionId?: Maybe<OrderByDirection>,
  contentType?: Maybe<OrderByDirection>,
  displayText?: Maybe<OrderByDirection>,
  published?: Maybe<OrderByDirection>,
  latest?: Maybe<OrderByDirection>,
  createdUtc?: Maybe<OrderByDirection>,
  modifiedUtc?: Maybe<OrderByDirection>,
  publishedUtc?: Maybe<OrderByDirection>,
  owner?: Maybe<OrderByDirection>,
  author?: Maybe<OrderByDirection>,
};

export type ButtonPart = {
   __typename?: 'ButtonPart',
  text?: Maybe<Scalars['String']>,
  type?: Maybe<Scalars['String']>,
};

export type ButtonWhereInput = {
  contentItemId?: Maybe<Scalars['ID']>,
  contentItemId_not?: Maybe<Scalars['ID']>,
  contentItemId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId?: Maybe<Scalars['ID']>,
  contentItemVersionId_not?: Maybe<Scalars['ID']>,
  contentItemVersionId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  displayText?: Maybe<Scalars['String']>,
  displayText_not?: Maybe<Scalars['String']>,
  displayText_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_contains?: Maybe<Scalars['String']>,
  displayText_not_contains?: Maybe<Scalars['String']>,
  displayText_starts_with?: Maybe<Scalars['String']>,
  displayText_not_starts_with?: Maybe<Scalars['String']>,
  displayText_ends_with?: Maybe<Scalars['String']>,
  displayText_not_ends_with?: Maybe<Scalars['String']>,
  createdUtc?: Maybe<Scalars['DateTime']>,
  createdUtc_not?: Maybe<Scalars['DateTime']>,
  createdUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_gt?: Maybe<Scalars['DateTime']>,
  createdUtc_gte?: Maybe<Scalars['DateTime']>,
  createdUtc_lt?: Maybe<Scalars['DateTime']>,
  createdUtc_lte?: Maybe<Scalars['DateTime']>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  modifiedUtc_not?: Maybe<Scalars['DateTime']>,
  modifiedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_gt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_gte?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lte?: Maybe<Scalars['DateTime']>,
  publishedUtc?: Maybe<Scalars['DateTime']>,
  publishedUtc_not?: Maybe<Scalars['DateTime']>,
  publishedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_gt?: Maybe<Scalars['DateTime']>,
  publishedUtc_gte?: Maybe<Scalars['DateTime']>,
  publishedUtc_lt?: Maybe<Scalars['DateTime']>,
  publishedUtc_lte?: Maybe<Scalars['DateTime']>,
  owner?: Maybe<Scalars['String']>,
  owner_not?: Maybe<Scalars['String']>,
  owner_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_contains?: Maybe<Scalars['String']>,
  owner_not_contains?: Maybe<Scalars['String']>,
  owner_starts_with?: Maybe<Scalars['String']>,
  owner_not_starts_with?: Maybe<Scalars['String']>,
  owner_ends_with?: Maybe<Scalars['String']>,
  owner_not_ends_with?: Maybe<Scalars['String']>,
  author?: Maybe<Scalars['String']>,
  author_not?: Maybe<Scalars['String']>,
  author_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_contains?: Maybe<Scalars['String']>,
  author_not_contains?: Maybe<Scalars['String']>,
  author_starts_with?: Maybe<Scalars['String']>,
  author_not_starts_with?: Maybe<Scalars['String']>,
  author_ends_with?: Maybe<Scalars['String']>,
  author_not_ends_with?: Maybe<Scalars['String']>,
  OR?: Maybe<Array<Maybe<ButtonWhereInput>>>,
  AND?: Maybe<Array<Maybe<ButtonWhereInput>>>,
  NOT?: Maybe<Array<Maybe<ButtonWhereInput>>>,
};

export type ContainedPart = {
   __typename?: 'ContainedPart',
  listContentItemId: Scalars['String'],
  order: Scalars['Int'],
};

export type ContainedPartInput = {
  listContentItemId?: Maybe<Scalars['ID']>,
  listContentItemId_not?: Maybe<Scalars['ID']>,
  listContentItemId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  listContentItemId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
};

export type Container = ContentItem & {
   __typename?: 'Container',
  author: Scalars['String'],
  contentItemId: Scalars['String'],
  contentItemVersionId: Scalars['String'],
  contentType: Scalars['String'],
  createdUtc?: Maybe<Scalars['DateTime']>,
  displayText: Scalars['String'],
  flow?: Maybe<FlowPart>,
  latest: Scalars['Boolean'],
  metadata?: Maybe<FlowMetadata>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  owner: Scalars['String'],
  published: Scalars['Boolean'],
  publishedUtc?: Maybe<Scalars['DateTime']>,
  render?: Maybe<Scalars['String']>,
};

export type ContainerOrderByInput = {
  contentItemId?: Maybe<OrderByDirection>,
  contentItemVersionId?: Maybe<OrderByDirection>,
  contentType?: Maybe<OrderByDirection>,
  displayText?: Maybe<OrderByDirection>,
  published?: Maybe<OrderByDirection>,
  latest?: Maybe<OrderByDirection>,
  createdUtc?: Maybe<OrderByDirection>,
  modifiedUtc?: Maybe<OrderByDirection>,
  publishedUtc?: Maybe<OrderByDirection>,
  owner?: Maybe<OrderByDirection>,
  author?: Maybe<OrderByDirection>,
};

export type ContainerWhereInput = {
  contentItemId?: Maybe<Scalars['ID']>,
  contentItemId_not?: Maybe<Scalars['ID']>,
  contentItemId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId?: Maybe<Scalars['ID']>,
  contentItemVersionId_not?: Maybe<Scalars['ID']>,
  contentItemVersionId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  displayText?: Maybe<Scalars['String']>,
  displayText_not?: Maybe<Scalars['String']>,
  displayText_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_contains?: Maybe<Scalars['String']>,
  displayText_not_contains?: Maybe<Scalars['String']>,
  displayText_starts_with?: Maybe<Scalars['String']>,
  displayText_not_starts_with?: Maybe<Scalars['String']>,
  displayText_ends_with?: Maybe<Scalars['String']>,
  displayText_not_ends_with?: Maybe<Scalars['String']>,
  createdUtc?: Maybe<Scalars['DateTime']>,
  createdUtc_not?: Maybe<Scalars['DateTime']>,
  createdUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_gt?: Maybe<Scalars['DateTime']>,
  createdUtc_gte?: Maybe<Scalars['DateTime']>,
  createdUtc_lt?: Maybe<Scalars['DateTime']>,
  createdUtc_lte?: Maybe<Scalars['DateTime']>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  modifiedUtc_not?: Maybe<Scalars['DateTime']>,
  modifiedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_gt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_gte?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lte?: Maybe<Scalars['DateTime']>,
  publishedUtc?: Maybe<Scalars['DateTime']>,
  publishedUtc_not?: Maybe<Scalars['DateTime']>,
  publishedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_gt?: Maybe<Scalars['DateTime']>,
  publishedUtc_gte?: Maybe<Scalars['DateTime']>,
  publishedUtc_lt?: Maybe<Scalars['DateTime']>,
  publishedUtc_lte?: Maybe<Scalars['DateTime']>,
  owner?: Maybe<Scalars['String']>,
  owner_not?: Maybe<Scalars['String']>,
  owner_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_contains?: Maybe<Scalars['String']>,
  owner_not_contains?: Maybe<Scalars['String']>,
  owner_starts_with?: Maybe<Scalars['String']>,
  owner_not_starts_with?: Maybe<Scalars['String']>,
  owner_ends_with?: Maybe<Scalars['String']>,
  owner_not_ends_with?: Maybe<Scalars['String']>,
  author?: Maybe<Scalars['String']>,
  author_not?: Maybe<Scalars['String']>,
  author_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_contains?: Maybe<Scalars['String']>,
  author_not_contains?: Maybe<Scalars['String']>,
  author_starts_with?: Maybe<Scalars['String']>,
  author_not_starts_with?: Maybe<Scalars['String']>,
  author_ends_with?: Maybe<Scalars['String']>,
  author_not_ends_with?: Maybe<Scalars['String']>,
  OR?: Maybe<Array<Maybe<ContainerWhereInput>>>,
  AND?: Maybe<Array<Maybe<ContainerWhereInput>>>,
  NOT?: Maybe<Array<Maybe<ContainerWhereInput>>>,
};

export type ContentItem = {
  author: Scalars['String'],
  contentItemId: Scalars['String'],
  contentItemVersionId: Scalars['String'],
  contentType: Scalars['String'],
  createdUtc?: Maybe<Scalars['DateTime']>,
  displayText: Scalars['String'],
  latest: Scalars['Boolean'],
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  owner: Scalars['String'],
  published: Scalars['Boolean'],
  publishedUtc?: Maybe<Scalars['DateTime']>,
};

export type ContentPickerField = {
   __typename?: 'ContentPickerField',
  contentItemIds?: Maybe<Array<Maybe<Scalars['String']>>>,
  contentItems?: Maybe<Array<Maybe<ContentItem>>>,
};


export type ContentPickerFieldContentItemIdsArgs = {
  first?: Maybe<Scalars['Int']>,
  last?: Maybe<Scalars['Int']>,
  skip?: Maybe<Scalars['Int']>
};


export type ContentPickerFieldContentItemsArgs = {
  first?: Maybe<Scalars['Int']>,
  last?: Maybe<Scalars['Int']>,
  skip?: Maybe<Scalars['Int']>
};





export enum FlowAlignment {
  Left = 'Left',
  Center = 'Center',
  Right = 'Right',
  Justify = 'Justify'
}

export type FlowMetadata = {
   __typename?: 'FlowMetadata',
  alignment?: Maybe<FlowAlignment>,
  size?: Maybe<Scalars['Int']>,
};

export type FlowPart = {
   __typename?: 'FlowPart',
  widgets?: Maybe<Array<Maybe<ContentItem>>>,
};

export type Form = ContentItem & {
   __typename?: 'Form',
  author: Scalars['String'],
  contentItemId: Scalars['String'],
  contentItemVersionId: Scalars['String'],
  contentType: Scalars['String'],
  createdUtc?: Maybe<Scalars['DateTime']>,
  displayText: Scalars['String'],
  flow?: Maybe<FlowPart>,
  form?: Maybe<FormPart>,
  latest: Scalars['Boolean'],
  metadata?: Maybe<FlowMetadata>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  owner: Scalars['String'],
  published: Scalars['Boolean'],
  publishedUtc?: Maybe<Scalars['DateTime']>,
  render?: Maybe<Scalars['String']>,
};

export type FormElementPart = {
   __typename?: 'FormElementPart',
  id?: Maybe<Scalars['String']>,
};

export type FormInputElementPart = {
   __typename?: 'FormInputElementPart',
  name?: Maybe<Scalars['String']>,
};

export type FormOrderByInput = {
  contentItemId?: Maybe<OrderByDirection>,
  contentItemVersionId?: Maybe<OrderByDirection>,
  contentType?: Maybe<OrderByDirection>,
  displayText?: Maybe<OrderByDirection>,
  published?: Maybe<OrderByDirection>,
  latest?: Maybe<OrderByDirection>,
  createdUtc?: Maybe<OrderByDirection>,
  modifiedUtc?: Maybe<OrderByDirection>,
  publishedUtc?: Maybe<OrderByDirection>,
  owner?: Maybe<OrderByDirection>,
  author?: Maybe<OrderByDirection>,
};

export type FormPart = {
   __typename?: 'FormPart',
  action?: Maybe<Scalars['String']>,
  method?: Maybe<Scalars['String']>,
  workflowTypeId?: Maybe<Scalars['String']>,
};

export type FormWhereInput = {
  contentItemId?: Maybe<Scalars['ID']>,
  contentItemId_not?: Maybe<Scalars['ID']>,
  contentItemId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId?: Maybe<Scalars['ID']>,
  contentItemVersionId_not?: Maybe<Scalars['ID']>,
  contentItemVersionId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  displayText?: Maybe<Scalars['String']>,
  displayText_not?: Maybe<Scalars['String']>,
  displayText_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_contains?: Maybe<Scalars['String']>,
  displayText_not_contains?: Maybe<Scalars['String']>,
  displayText_starts_with?: Maybe<Scalars['String']>,
  displayText_not_starts_with?: Maybe<Scalars['String']>,
  displayText_ends_with?: Maybe<Scalars['String']>,
  displayText_not_ends_with?: Maybe<Scalars['String']>,
  createdUtc?: Maybe<Scalars['DateTime']>,
  createdUtc_not?: Maybe<Scalars['DateTime']>,
  createdUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_gt?: Maybe<Scalars['DateTime']>,
  createdUtc_gte?: Maybe<Scalars['DateTime']>,
  createdUtc_lt?: Maybe<Scalars['DateTime']>,
  createdUtc_lte?: Maybe<Scalars['DateTime']>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  modifiedUtc_not?: Maybe<Scalars['DateTime']>,
  modifiedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_gt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_gte?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lte?: Maybe<Scalars['DateTime']>,
  publishedUtc?: Maybe<Scalars['DateTime']>,
  publishedUtc_not?: Maybe<Scalars['DateTime']>,
  publishedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_gt?: Maybe<Scalars['DateTime']>,
  publishedUtc_gte?: Maybe<Scalars['DateTime']>,
  publishedUtc_lt?: Maybe<Scalars['DateTime']>,
  publishedUtc_lte?: Maybe<Scalars['DateTime']>,
  owner?: Maybe<Scalars['String']>,
  owner_not?: Maybe<Scalars['String']>,
  owner_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_contains?: Maybe<Scalars['String']>,
  owner_not_contains?: Maybe<Scalars['String']>,
  owner_starts_with?: Maybe<Scalars['String']>,
  owner_not_starts_with?: Maybe<Scalars['String']>,
  owner_ends_with?: Maybe<Scalars['String']>,
  owner_not_ends_with?: Maybe<Scalars['String']>,
  author?: Maybe<Scalars['String']>,
  author_not?: Maybe<Scalars['String']>,
  author_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_contains?: Maybe<Scalars['String']>,
  author_not_contains?: Maybe<Scalars['String']>,
  author_starts_with?: Maybe<Scalars['String']>,
  author_not_starts_with?: Maybe<Scalars['String']>,
  author_ends_with?: Maybe<Scalars['String']>,
  author_not_ends_with?: Maybe<Scalars['String']>,
  OR?: Maybe<Array<Maybe<FormWhereInput>>>,
  AND?: Maybe<Array<Maybe<FormWhereInput>>>,
  NOT?: Maybe<Array<Maybe<FormWhereInput>>>,
};

export type HtmlBodyPart = {
   __typename?: 'HtmlBodyPart',
  html?: Maybe<Scalars['String']>,
};

export type Image = {
   __typename?: 'Image',
  caption?: Maybe<Scalars['String']>,
  media?: Maybe<MediaField>,
};

export type ImageOrderByInput = {
  contentItemId?: Maybe<OrderByDirection>,
  contentItemVersionId?: Maybe<OrderByDirection>,
  contentType?: Maybe<OrderByDirection>,
  displayText?: Maybe<OrderByDirection>,
  published?: Maybe<OrderByDirection>,
  latest?: Maybe<OrderByDirection>,
  createdUtc?: Maybe<OrderByDirection>,
  modifiedUtc?: Maybe<OrderByDirection>,
  publishedUtc?: Maybe<OrderByDirection>,
  owner?: Maybe<OrderByDirection>,
  author?: Maybe<OrderByDirection>,
};

export type ImageWhereInput = {
  contentItemId?: Maybe<Scalars['ID']>,
  contentItemId_not?: Maybe<Scalars['ID']>,
  contentItemId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId?: Maybe<Scalars['ID']>,
  contentItemVersionId_not?: Maybe<Scalars['ID']>,
  contentItemVersionId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  displayText?: Maybe<Scalars['String']>,
  displayText_not?: Maybe<Scalars['String']>,
  displayText_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_contains?: Maybe<Scalars['String']>,
  displayText_not_contains?: Maybe<Scalars['String']>,
  displayText_starts_with?: Maybe<Scalars['String']>,
  displayText_not_starts_with?: Maybe<Scalars['String']>,
  displayText_ends_with?: Maybe<Scalars['String']>,
  displayText_not_ends_with?: Maybe<Scalars['String']>,
  createdUtc?: Maybe<Scalars['DateTime']>,
  createdUtc_not?: Maybe<Scalars['DateTime']>,
  createdUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_gt?: Maybe<Scalars['DateTime']>,
  createdUtc_gte?: Maybe<Scalars['DateTime']>,
  createdUtc_lt?: Maybe<Scalars['DateTime']>,
  createdUtc_lte?: Maybe<Scalars['DateTime']>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  modifiedUtc_not?: Maybe<Scalars['DateTime']>,
  modifiedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_gt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_gte?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lte?: Maybe<Scalars['DateTime']>,
  publishedUtc?: Maybe<Scalars['DateTime']>,
  publishedUtc_not?: Maybe<Scalars['DateTime']>,
  publishedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_gt?: Maybe<Scalars['DateTime']>,
  publishedUtc_gte?: Maybe<Scalars['DateTime']>,
  publishedUtc_lt?: Maybe<Scalars['DateTime']>,
  publishedUtc_lte?: Maybe<Scalars['DateTime']>,
  owner?: Maybe<Scalars['String']>,
  owner_not?: Maybe<Scalars['String']>,
  owner_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_contains?: Maybe<Scalars['String']>,
  owner_not_contains?: Maybe<Scalars['String']>,
  owner_starts_with?: Maybe<Scalars['String']>,
  owner_not_starts_with?: Maybe<Scalars['String']>,
  owner_ends_with?: Maybe<Scalars['String']>,
  owner_not_ends_with?: Maybe<Scalars['String']>,
  author?: Maybe<Scalars['String']>,
  author_not?: Maybe<Scalars['String']>,
  author_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_contains?: Maybe<Scalars['String']>,
  author_not_contains?: Maybe<Scalars['String']>,
  author_starts_with?: Maybe<Scalars['String']>,
  author_not_starts_with?: Maybe<Scalars['String']>,
  author_ends_with?: Maybe<Scalars['String']>,
  author_not_ends_with?: Maybe<Scalars['String']>,
  OR?: Maybe<Array<Maybe<ImageWhereInput>>>,
  AND?: Maybe<Array<Maybe<ImageWhereInput>>>,
  NOT?: Maybe<Array<Maybe<ImageWhereInput>>>,
};

export type ImageWidget = ContentItem & {
   __typename?: 'ImageWidget',
  author: Scalars['String'],
  contentItemId: Scalars['String'],
  contentItemVersionId: Scalars['String'],
  contentType: Scalars['String'],
  createdUtc?: Maybe<Scalars['DateTime']>,
  displayText: Scalars['String'],
  image?: Maybe<Image>,
  latest: Scalars['Boolean'],
  metadata?: Maybe<FlowMetadata>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  owner: Scalars['String'],
  published: Scalars['Boolean'],
  publishedUtc?: Maybe<Scalars['DateTime']>,
  render?: Maybe<Scalars['String']>,
};

export type ImageWidgetOrderByInput = {
  contentItemId?: Maybe<OrderByDirection>,
  contentItemVersionId?: Maybe<OrderByDirection>,
  contentType?: Maybe<OrderByDirection>,
  displayText?: Maybe<OrderByDirection>,
  published?: Maybe<OrderByDirection>,
  latest?: Maybe<OrderByDirection>,
  createdUtc?: Maybe<OrderByDirection>,
  modifiedUtc?: Maybe<OrderByDirection>,
  publishedUtc?: Maybe<OrderByDirection>,
  owner?: Maybe<OrderByDirection>,
  author?: Maybe<OrderByDirection>,
};

export type ImageWidgetWhereInput = {
  contentItemId?: Maybe<Scalars['ID']>,
  contentItemId_not?: Maybe<Scalars['ID']>,
  contentItemId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId?: Maybe<Scalars['ID']>,
  contentItemVersionId_not?: Maybe<Scalars['ID']>,
  contentItemVersionId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  displayText?: Maybe<Scalars['String']>,
  displayText_not?: Maybe<Scalars['String']>,
  displayText_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_contains?: Maybe<Scalars['String']>,
  displayText_not_contains?: Maybe<Scalars['String']>,
  displayText_starts_with?: Maybe<Scalars['String']>,
  displayText_not_starts_with?: Maybe<Scalars['String']>,
  displayText_ends_with?: Maybe<Scalars['String']>,
  displayText_not_ends_with?: Maybe<Scalars['String']>,
  createdUtc?: Maybe<Scalars['DateTime']>,
  createdUtc_not?: Maybe<Scalars['DateTime']>,
  createdUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_gt?: Maybe<Scalars['DateTime']>,
  createdUtc_gte?: Maybe<Scalars['DateTime']>,
  createdUtc_lt?: Maybe<Scalars['DateTime']>,
  createdUtc_lte?: Maybe<Scalars['DateTime']>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  modifiedUtc_not?: Maybe<Scalars['DateTime']>,
  modifiedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_gt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_gte?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lte?: Maybe<Scalars['DateTime']>,
  publishedUtc?: Maybe<Scalars['DateTime']>,
  publishedUtc_not?: Maybe<Scalars['DateTime']>,
  publishedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_gt?: Maybe<Scalars['DateTime']>,
  publishedUtc_gte?: Maybe<Scalars['DateTime']>,
  publishedUtc_lt?: Maybe<Scalars['DateTime']>,
  publishedUtc_lte?: Maybe<Scalars['DateTime']>,
  owner?: Maybe<Scalars['String']>,
  owner_not?: Maybe<Scalars['String']>,
  owner_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_contains?: Maybe<Scalars['String']>,
  owner_not_contains?: Maybe<Scalars['String']>,
  owner_starts_with?: Maybe<Scalars['String']>,
  owner_not_starts_with?: Maybe<Scalars['String']>,
  owner_ends_with?: Maybe<Scalars['String']>,
  owner_not_ends_with?: Maybe<Scalars['String']>,
  author?: Maybe<Scalars['String']>,
  author_not?: Maybe<Scalars['String']>,
  author_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_contains?: Maybe<Scalars['String']>,
  author_not_contains?: Maybe<Scalars['String']>,
  author_starts_with?: Maybe<Scalars['String']>,
  author_not_starts_with?: Maybe<Scalars['String']>,
  author_ends_with?: Maybe<Scalars['String']>,
  author_not_ends_with?: Maybe<Scalars['String']>,
  OR?: Maybe<Array<Maybe<ImageWidgetWhereInput>>>,
  AND?: Maybe<Array<Maybe<ImageWidgetWhereInput>>>,
  NOT?: Maybe<Array<Maybe<ImageWidgetWhereInput>>>,
};

export type Input = ContentItem & {
   __typename?: 'Input',
  author: Scalars['String'],
  contentItemId: Scalars['String'],
  contentItemVersionId: Scalars['String'],
  contentType: Scalars['String'],
  createdUtc?: Maybe<Scalars['DateTime']>,
  displayText: Scalars['String'],
  formElement?: Maybe<FormElementPart>,
  formInputElement?: Maybe<FormInputElementPart>,
  input?: Maybe<InputPart>,
  latest: Scalars['Boolean'],
  metadata?: Maybe<FlowMetadata>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  owner: Scalars['String'],
  published: Scalars['Boolean'],
  publishedUtc?: Maybe<Scalars['DateTime']>,
  render?: Maybe<Scalars['String']>,
};

export type InputOrderByInput = {
  contentItemId?: Maybe<OrderByDirection>,
  contentItemVersionId?: Maybe<OrderByDirection>,
  contentType?: Maybe<OrderByDirection>,
  displayText?: Maybe<OrderByDirection>,
  published?: Maybe<OrderByDirection>,
  latest?: Maybe<OrderByDirection>,
  createdUtc?: Maybe<OrderByDirection>,
  modifiedUtc?: Maybe<OrderByDirection>,
  publishedUtc?: Maybe<OrderByDirection>,
  owner?: Maybe<OrderByDirection>,
  author?: Maybe<OrderByDirection>,
};

export type InputPart = {
   __typename?: 'InputPart',
  defaultValue?: Maybe<Scalars['String']>,
  placeholder?: Maybe<Scalars['String']>,
  type?: Maybe<Scalars['String']>,
};

export type InputWhereInput = {
  contentItemId?: Maybe<Scalars['ID']>,
  contentItemId_not?: Maybe<Scalars['ID']>,
  contentItemId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId?: Maybe<Scalars['ID']>,
  contentItemVersionId_not?: Maybe<Scalars['ID']>,
  contentItemVersionId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  displayText?: Maybe<Scalars['String']>,
  displayText_not?: Maybe<Scalars['String']>,
  displayText_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_contains?: Maybe<Scalars['String']>,
  displayText_not_contains?: Maybe<Scalars['String']>,
  displayText_starts_with?: Maybe<Scalars['String']>,
  displayText_not_starts_with?: Maybe<Scalars['String']>,
  displayText_ends_with?: Maybe<Scalars['String']>,
  displayText_not_ends_with?: Maybe<Scalars['String']>,
  createdUtc?: Maybe<Scalars['DateTime']>,
  createdUtc_not?: Maybe<Scalars['DateTime']>,
  createdUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_gt?: Maybe<Scalars['DateTime']>,
  createdUtc_gte?: Maybe<Scalars['DateTime']>,
  createdUtc_lt?: Maybe<Scalars['DateTime']>,
  createdUtc_lte?: Maybe<Scalars['DateTime']>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  modifiedUtc_not?: Maybe<Scalars['DateTime']>,
  modifiedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_gt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_gte?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lte?: Maybe<Scalars['DateTime']>,
  publishedUtc?: Maybe<Scalars['DateTime']>,
  publishedUtc_not?: Maybe<Scalars['DateTime']>,
  publishedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_gt?: Maybe<Scalars['DateTime']>,
  publishedUtc_gte?: Maybe<Scalars['DateTime']>,
  publishedUtc_lt?: Maybe<Scalars['DateTime']>,
  publishedUtc_lte?: Maybe<Scalars['DateTime']>,
  owner?: Maybe<Scalars['String']>,
  owner_not?: Maybe<Scalars['String']>,
  owner_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_contains?: Maybe<Scalars['String']>,
  owner_not_contains?: Maybe<Scalars['String']>,
  owner_starts_with?: Maybe<Scalars['String']>,
  owner_not_starts_with?: Maybe<Scalars['String']>,
  owner_ends_with?: Maybe<Scalars['String']>,
  owner_not_ends_with?: Maybe<Scalars['String']>,
  author?: Maybe<Scalars['String']>,
  author_not?: Maybe<Scalars['String']>,
  author_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_contains?: Maybe<Scalars['String']>,
  author_not_contains?: Maybe<Scalars['String']>,
  author_starts_with?: Maybe<Scalars['String']>,
  author_not_starts_with?: Maybe<Scalars['String']>,
  author_ends_with?: Maybe<Scalars['String']>,
  author_not_ends_with?: Maybe<Scalars['String']>,
  OR?: Maybe<Array<Maybe<InputWhereInput>>>,
  AND?: Maybe<Array<Maybe<InputWhereInput>>>,
  NOT?: Maybe<Array<Maybe<InputWhereInput>>>,
};

export type Label = ContentItem & {
   __typename?: 'Label',
  author: Scalars['String'],
  contentItemId: Scalars['String'],
  contentItemVersionId: Scalars['String'],
  contentType: Scalars['String'],
  createdUtc?: Maybe<Scalars['DateTime']>,
  displayText: Scalars['String'],
  formElement?: Maybe<FormElementPart>,
  label?: Maybe<LabelPart>,
  latest: Scalars['Boolean'],
  metadata?: Maybe<FlowMetadata>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  owner: Scalars['String'],
  published: Scalars['Boolean'],
  publishedUtc?: Maybe<Scalars['DateTime']>,
  render?: Maybe<Scalars['String']>,
};

export type LabelOrderByInput = {
  contentItemId?: Maybe<OrderByDirection>,
  contentItemVersionId?: Maybe<OrderByDirection>,
  contentType?: Maybe<OrderByDirection>,
  displayText?: Maybe<OrderByDirection>,
  published?: Maybe<OrderByDirection>,
  latest?: Maybe<OrderByDirection>,
  createdUtc?: Maybe<OrderByDirection>,
  modifiedUtc?: Maybe<OrderByDirection>,
  publishedUtc?: Maybe<OrderByDirection>,
  owner?: Maybe<OrderByDirection>,
  author?: Maybe<OrderByDirection>,
};

export type LabelPart = {
   __typename?: 'LabelPart',
  for?: Maybe<Scalars['String']>,
  value?: Maybe<Scalars['String']>,
};

export type LabelWhereInput = {
  contentItemId?: Maybe<Scalars['ID']>,
  contentItemId_not?: Maybe<Scalars['ID']>,
  contentItemId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId?: Maybe<Scalars['ID']>,
  contentItemVersionId_not?: Maybe<Scalars['ID']>,
  contentItemVersionId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  displayText?: Maybe<Scalars['String']>,
  displayText_not?: Maybe<Scalars['String']>,
  displayText_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_contains?: Maybe<Scalars['String']>,
  displayText_not_contains?: Maybe<Scalars['String']>,
  displayText_starts_with?: Maybe<Scalars['String']>,
  displayText_not_starts_with?: Maybe<Scalars['String']>,
  displayText_ends_with?: Maybe<Scalars['String']>,
  displayText_not_ends_with?: Maybe<Scalars['String']>,
  createdUtc?: Maybe<Scalars['DateTime']>,
  createdUtc_not?: Maybe<Scalars['DateTime']>,
  createdUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_gt?: Maybe<Scalars['DateTime']>,
  createdUtc_gte?: Maybe<Scalars['DateTime']>,
  createdUtc_lt?: Maybe<Scalars['DateTime']>,
  createdUtc_lte?: Maybe<Scalars['DateTime']>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  modifiedUtc_not?: Maybe<Scalars['DateTime']>,
  modifiedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_gt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_gte?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lte?: Maybe<Scalars['DateTime']>,
  publishedUtc?: Maybe<Scalars['DateTime']>,
  publishedUtc_not?: Maybe<Scalars['DateTime']>,
  publishedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_gt?: Maybe<Scalars['DateTime']>,
  publishedUtc_gte?: Maybe<Scalars['DateTime']>,
  publishedUtc_lt?: Maybe<Scalars['DateTime']>,
  publishedUtc_lte?: Maybe<Scalars['DateTime']>,
  owner?: Maybe<Scalars['String']>,
  owner_not?: Maybe<Scalars['String']>,
  owner_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_contains?: Maybe<Scalars['String']>,
  owner_not_contains?: Maybe<Scalars['String']>,
  owner_starts_with?: Maybe<Scalars['String']>,
  owner_not_starts_with?: Maybe<Scalars['String']>,
  owner_ends_with?: Maybe<Scalars['String']>,
  owner_not_ends_with?: Maybe<Scalars['String']>,
  author?: Maybe<Scalars['String']>,
  author_not?: Maybe<Scalars['String']>,
  author_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_contains?: Maybe<Scalars['String']>,
  author_not_contains?: Maybe<Scalars['String']>,
  author_starts_with?: Maybe<Scalars['String']>,
  author_not_starts_with?: Maybe<Scalars['String']>,
  author_ends_with?: Maybe<Scalars['String']>,
  author_not_ends_with?: Maybe<Scalars['String']>,
  OR?: Maybe<Array<Maybe<LabelWhereInput>>>,
  AND?: Maybe<Array<Maybe<LabelWhereInput>>>,
  NOT?: Maybe<Array<Maybe<LabelWhereInput>>>,
};

export type Layer = {
   __typename?: 'Layer',
  description: Scalars['String'],
  name: Scalars['String'],
  rule: Scalars['String'],
  widgets?: Maybe<Array<Maybe<LayerWidget>>>,
};


export type LayerWidgetsArgs = {
  status?: Maybe<Status>
};

export type LayerWidget = {
   __typename?: 'LayerWidget',
  position?: Maybe<Scalars['Decimal']>,
  renderTitle?: Maybe<Scalars['Boolean']>,
  widget?: Maybe<ContentItem>,
  zone?: Maybe<Scalars['String']>,
};

export type LinkField = {
   __typename?: 'LinkField',
  text?: Maybe<Scalars['String']>,
  url?: Maybe<Scalars['String']>,
};

export type LinkMenuItem = ContentItem & MenuItem & {
   __typename?: 'LinkMenuItem',
  author: Scalars['String'],
  contentItemId: Scalars['String'],
  contentItemVersionId: Scalars['String'],
  contentType: Scalars['String'],
  createdUtc?: Maybe<Scalars['DateTime']>,
  displayText: Scalars['String'],
  latest: Scalars['Boolean'],
  linkMenuItem?: Maybe<LinkMenuItemPart>,
  menuItemsList?: Maybe<MenuItemsListPart>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  owner: Scalars['String'],
  published: Scalars['Boolean'],
  publishedUtc?: Maybe<Scalars['DateTime']>,
  render?: Maybe<Scalars['String']>,
};

export type LinkMenuItemOrderByInput = {
  contentItemId?: Maybe<OrderByDirection>,
  contentItemVersionId?: Maybe<OrderByDirection>,
  contentType?: Maybe<OrderByDirection>,
  displayText?: Maybe<OrderByDirection>,
  published?: Maybe<OrderByDirection>,
  latest?: Maybe<OrderByDirection>,
  createdUtc?: Maybe<OrderByDirection>,
  modifiedUtc?: Maybe<OrderByDirection>,
  publishedUtc?: Maybe<OrderByDirection>,
  owner?: Maybe<OrderByDirection>,
  author?: Maybe<OrderByDirection>,
};

export type LinkMenuItemPart = {
   __typename?: 'LinkMenuItemPart',
  name?: Maybe<Scalars['String']>,
  url?: Maybe<Scalars['String']>,
};

export type LinkMenuItemWhereInput = {
  contentItemId?: Maybe<Scalars['ID']>,
  contentItemId_not?: Maybe<Scalars['ID']>,
  contentItemId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId?: Maybe<Scalars['ID']>,
  contentItemVersionId_not?: Maybe<Scalars['ID']>,
  contentItemVersionId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  displayText?: Maybe<Scalars['String']>,
  displayText_not?: Maybe<Scalars['String']>,
  displayText_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_contains?: Maybe<Scalars['String']>,
  displayText_not_contains?: Maybe<Scalars['String']>,
  displayText_starts_with?: Maybe<Scalars['String']>,
  displayText_not_starts_with?: Maybe<Scalars['String']>,
  displayText_ends_with?: Maybe<Scalars['String']>,
  displayText_not_ends_with?: Maybe<Scalars['String']>,
  createdUtc?: Maybe<Scalars['DateTime']>,
  createdUtc_not?: Maybe<Scalars['DateTime']>,
  createdUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_gt?: Maybe<Scalars['DateTime']>,
  createdUtc_gte?: Maybe<Scalars['DateTime']>,
  createdUtc_lt?: Maybe<Scalars['DateTime']>,
  createdUtc_lte?: Maybe<Scalars['DateTime']>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  modifiedUtc_not?: Maybe<Scalars['DateTime']>,
  modifiedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_gt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_gte?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lte?: Maybe<Scalars['DateTime']>,
  publishedUtc?: Maybe<Scalars['DateTime']>,
  publishedUtc_not?: Maybe<Scalars['DateTime']>,
  publishedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_gt?: Maybe<Scalars['DateTime']>,
  publishedUtc_gte?: Maybe<Scalars['DateTime']>,
  publishedUtc_lt?: Maybe<Scalars['DateTime']>,
  publishedUtc_lte?: Maybe<Scalars['DateTime']>,
  owner?: Maybe<Scalars['String']>,
  owner_not?: Maybe<Scalars['String']>,
  owner_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_contains?: Maybe<Scalars['String']>,
  owner_not_contains?: Maybe<Scalars['String']>,
  owner_starts_with?: Maybe<Scalars['String']>,
  owner_not_starts_with?: Maybe<Scalars['String']>,
  owner_ends_with?: Maybe<Scalars['String']>,
  owner_not_ends_with?: Maybe<Scalars['String']>,
  author?: Maybe<Scalars['String']>,
  author_not?: Maybe<Scalars['String']>,
  author_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_contains?: Maybe<Scalars['String']>,
  author_not_contains?: Maybe<Scalars['String']>,
  author_starts_with?: Maybe<Scalars['String']>,
  author_not_starts_with?: Maybe<Scalars['String']>,
  author_ends_with?: Maybe<Scalars['String']>,
  author_not_ends_with?: Maybe<Scalars['String']>,
  OR?: Maybe<Array<Maybe<LinkMenuItemWhereInput>>>,
  AND?: Maybe<Array<Maybe<LinkMenuItemWhereInput>>>,
  NOT?: Maybe<Array<Maybe<LinkMenuItemWhereInput>>>,
};

export type LiquidPage = ContentItem & {
   __typename?: 'LiquidPage',
  author: Scalars['String'],
  contentItemId: Scalars['String'],
  contentItemVersionId: Scalars['String'],
  contentType: Scalars['String'],
  createdUtc?: Maybe<Scalars['DateTime']>,
  displayText: Scalars['String'],
  latest: Scalars['Boolean'],
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  owner: Scalars['String'],
  path: Scalars['String'],
  published: Scalars['Boolean'],
  publishedUtc?: Maybe<Scalars['DateTime']>,
  render?: Maybe<Scalars['String']>,
};

export type LiquidPageOrderByInput = {
  contentItemId?: Maybe<OrderByDirection>,
  contentItemVersionId?: Maybe<OrderByDirection>,
  contentType?: Maybe<OrderByDirection>,
  displayText?: Maybe<OrderByDirection>,
  published?: Maybe<OrderByDirection>,
  latest?: Maybe<OrderByDirection>,
  createdUtc?: Maybe<OrderByDirection>,
  modifiedUtc?: Maybe<OrderByDirection>,
  publishedUtc?: Maybe<OrderByDirection>,
  owner?: Maybe<OrderByDirection>,
  author?: Maybe<OrderByDirection>,
};

export type LiquidPageWhereInput = {
  contentItemId?: Maybe<Scalars['ID']>,
  contentItemId_not?: Maybe<Scalars['ID']>,
  contentItemId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId?: Maybe<Scalars['ID']>,
  contentItemVersionId_not?: Maybe<Scalars['ID']>,
  contentItemVersionId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  displayText?: Maybe<Scalars['String']>,
  displayText_not?: Maybe<Scalars['String']>,
  displayText_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_contains?: Maybe<Scalars['String']>,
  displayText_not_contains?: Maybe<Scalars['String']>,
  displayText_starts_with?: Maybe<Scalars['String']>,
  displayText_not_starts_with?: Maybe<Scalars['String']>,
  displayText_ends_with?: Maybe<Scalars['String']>,
  displayText_not_ends_with?: Maybe<Scalars['String']>,
  createdUtc?: Maybe<Scalars['DateTime']>,
  createdUtc_not?: Maybe<Scalars['DateTime']>,
  createdUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_gt?: Maybe<Scalars['DateTime']>,
  createdUtc_gte?: Maybe<Scalars['DateTime']>,
  createdUtc_lt?: Maybe<Scalars['DateTime']>,
  createdUtc_lte?: Maybe<Scalars['DateTime']>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  modifiedUtc_not?: Maybe<Scalars['DateTime']>,
  modifiedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_gt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_gte?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lte?: Maybe<Scalars['DateTime']>,
  publishedUtc?: Maybe<Scalars['DateTime']>,
  publishedUtc_not?: Maybe<Scalars['DateTime']>,
  publishedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_gt?: Maybe<Scalars['DateTime']>,
  publishedUtc_gte?: Maybe<Scalars['DateTime']>,
  publishedUtc_lt?: Maybe<Scalars['DateTime']>,
  publishedUtc_lte?: Maybe<Scalars['DateTime']>,
  owner?: Maybe<Scalars['String']>,
  owner_not?: Maybe<Scalars['String']>,
  owner_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_contains?: Maybe<Scalars['String']>,
  owner_not_contains?: Maybe<Scalars['String']>,
  owner_starts_with?: Maybe<Scalars['String']>,
  owner_not_starts_with?: Maybe<Scalars['String']>,
  owner_ends_with?: Maybe<Scalars['String']>,
  owner_not_ends_with?: Maybe<Scalars['String']>,
  author?: Maybe<Scalars['String']>,
  author_not?: Maybe<Scalars['String']>,
  author_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_contains?: Maybe<Scalars['String']>,
  author_not_contains?: Maybe<Scalars['String']>,
  author_starts_with?: Maybe<Scalars['String']>,
  author_not_starts_with?: Maybe<Scalars['String']>,
  author_ends_with?: Maybe<Scalars['String']>,
  author_not_ends_with?: Maybe<Scalars['String']>,
  OR?: Maybe<Array<Maybe<LiquidPageWhereInput>>>,
  AND?: Maybe<Array<Maybe<LiquidPageWhereInput>>>,
  NOT?: Maybe<Array<Maybe<LiquidPageWhereInput>>>,
  path?: Maybe<Scalars['String']>,
  path_not?: Maybe<Scalars['String']>,
  path_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  path_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  path_contains?: Maybe<Scalars['String']>,
  path_not_contains?: Maybe<Scalars['String']>,
  path_starts_with?: Maybe<Scalars['String']>,
  path_not_starts_with?: Maybe<Scalars['String']>,
  path_ends_with?: Maybe<Scalars['String']>,
  path_not_ends_with?: Maybe<Scalars['String']>,
};

export type LiquidWidget = ContentItem & {
   __typename?: 'LiquidWidget',
  author: Scalars['String'],
  contentItemId: Scalars['String'],
  contentItemVersionId: Scalars['String'],
  contentType: Scalars['String'],
  createdUtc?: Maybe<Scalars['DateTime']>,
  displayText: Scalars['String'],
  latest: Scalars['Boolean'],
  metadata?: Maybe<FlowMetadata>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  owner: Scalars['String'],
  published: Scalars['Boolean'],
  publishedUtc?: Maybe<Scalars['DateTime']>,
  render?: Maybe<Scalars['String']>,
};

export type LiquidWidgetOrderByInput = {
  contentItemId?: Maybe<OrderByDirection>,
  contentItemVersionId?: Maybe<OrderByDirection>,
  contentType?: Maybe<OrderByDirection>,
  displayText?: Maybe<OrderByDirection>,
  published?: Maybe<OrderByDirection>,
  latest?: Maybe<OrderByDirection>,
  createdUtc?: Maybe<OrderByDirection>,
  modifiedUtc?: Maybe<OrderByDirection>,
  publishedUtc?: Maybe<OrderByDirection>,
  owner?: Maybe<OrderByDirection>,
  author?: Maybe<OrderByDirection>,
};

export type LiquidWidgetWhereInput = {
  contentItemId?: Maybe<Scalars['ID']>,
  contentItemId_not?: Maybe<Scalars['ID']>,
  contentItemId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId?: Maybe<Scalars['ID']>,
  contentItemVersionId_not?: Maybe<Scalars['ID']>,
  contentItemVersionId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  displayText?: Maybe<Scalars['String']>,
  displayText_not?: Maybe<Scalars['String']>,
  displayText_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_contains?: Maybe<Scalars['String']>,
  displayText_not_contains?: Maybe<Scalars['String']>,
  displayText_starts_with?: Maybe<Scalars['String']>,
  displayText_not_starts_with?: Maybe<Scalars['String']>,
  displayText_ends_with?: Maybe<Scalars['String']>,
  displayText_not_ends_with?: Maybe<Scalars['String']>,
  createdUtc?: Maybe<Scalars['DateTime']>,
  createdUtc_not?: Maybe<Scalars['DateTime']>,
  createdUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_gt?: Maybe<Scalars['DateTime']>,
  createdUtc_gte?: Maybe<Scalars['DateTime']>,
  createdUtc_lt?: Maybe<Scalars['DateTime']>,
  createdUtc_lte?: Maybe<Scalars['DateTime']>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  modifiedUtc_not?: Maybe<Scalars['DateTime']>,
  modifiedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_gt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_gte?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lte?: Maybe<Scalars['DateTime']>,
  publishedUtc?: Maybe<Scalars['DateTime']>,
  publishedUtc_not?: Maybe<Scalars['DateTime']>,
  publishedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_gt?: Maybe<Scalars['DateTime']>,
  publishedUtc_gte?: Maybe<Scalars['DateTime']>,
  publishedUtc_lt?: Maybe<Scalars['DateTime']>,
  publishedUtc_lte?: Maybe<Scalars['DateTime']>,
  owner?: Maybe<Scalars['String']>,
  owner_not?: Maybe<Scalars['String']>,
  owner_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_contains?: Maybe<Scalars['String']>,
  owner_not_contains?: Maybe<Scalars['String']>,
  owner_starts_with?: Maybe<Scalars['String']>,
  owner_not_starts_with?: Maybe<Scalars['String']>,
  owner_ends_with?: Maybe<Scalars['String']>,
  owner_not_ends_with?: Maybe<Scalars['String']>,
  author?: Maybe<Scalars['String']>,
  author_not?: Maybe<Scalars['String']>,
  author_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_contains?: Maybe<Scalars['String']>,
  author_not_contains?: Maybe<Scalars['String']>,
  author_starts_with?: Maybe<Scalars['String']>,
  author_not_starts_with?: Maybe<Scalars['String']>,
  author_ends_with?: Maybe<Scalars['String']>,
  author_not_ends_with?: Maybe<Scalars['String']>,
  OR?: Maybe<Array<Maybe<LiquidWidgetWhereInput>>>,
  AND?: Maybe<Array<Maybe<LiquidWidgetWhereInput>>>,
  NOT?: Maybe<Array<Maybe<LiquidWidgetWhereInput>>>,
};

export type ListPart = {
   __typename?: 'ListPart',
  contentItems?: Maybe<Array<Maybe<ContentItem>>>,
};


export type ListPartContentItemsArgs = {
  first?: Maybe<Scalars['Int']>,
  skip?: Maybe<Scalars['Int']>
};

export type MarkdownBodyPart = {
   __typename?: 'MarkdownBodyPart',
  html?: Maybe<Scalars['String']>,
  markdown?: Maybe<Scalars['String']>,
};

export type MarkdownField = {
   __typename?: 'MarkdownField',
  html?: Maybe<Scalars['String']>,
  markdown?: Maybe<Scalars['String']>,
};

export type MediaAsset = {
   __typename?: 'MediaAsset',
  lastModifiedUtc?: Maybe<Scalars['DateTime']>,
  length: Scalars['Int'],
  name: Scalars['String'],
  path?: Maybe<Scalars['String']>,
};

export type MediaField = {
   __typename?: 'MediaField',
  paths?: Maybe<Array<Maybe<Scalars['String']>>>,
  urls?: Maybe<Array<Maybe<Scalars['String']>>>,
};


export type MediaFieldPathsArgs = {
  first?: Maybe<Scalars['Int']>,
  last?: Maybe<Scalars['Int']>,
  skip?: Maybe<Scalars['Int']>
};


export type MediaFieldUrlsArgs = {
  first?: Maybe<Scalars['Int']>,
  last?: Maybe<Scalars['Int']>,
  skip?: Maybe<Scalars['Int']>
};

export type Menu = ContentItem & {
   __typename?: 'Menu',
  alias?: Maybe<AliasPart>,
  author: Scalars['String'],
  contentItemId: Scalars['String'],
  contentItemVersionId: Scalars['String'],
  contentType: Scalars['String'],
  createdUtc?: Maybe<Scalars['DateTime']>,
  displayText: Scalars['String'],
  latest: Scalars['Boolean'],
  menuItemsList?: Maybe<MenuItemsListPart>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  owner: Scalars['String'],
  published: Scalars['Boolean'],
  publishedUtc?: Maybe<Scalars['DateTime']>,
  render?: Maybe<Scalars['String']>,
};

export type MenuItem = {
  menuItemsList?: Maybe<MenuItemsListPart>,
};

export type MenuItemsListPart = {
   __typename?: 'MenuItemsListPart',
  menuItems?: Maybe<Array<Maybe<MenuItem>>>,
};

export type MenuOrderByInput = {
  contentItemId?: Maybe<OrderByDirection>,
  contentItemVersionId?: Maybe<OrderByDirection>,
  contentType?: Maybe<OrderByDirection>,
  displayText?: Maybe<OrderByDirection>,
  published?: Maybe<OrderByDirection>,
  latest?: Maybe<OrderByDirection>,
  createdUtc?: Maybe<OrderByDirection>,
  modifiedUtc?: Maybe<OrderByDirection>,
  publishedUtc?: Maybe<OrderByDirection>,
  owner?: Maybe<OrderByDirection>,
  author?: Maybe<OrderByDirection>,
};

export type MenuWhereInput = {
  contentItemId?: Maybe<Scalars['ID']>,
  contentItemId_not?: Maybe<Scalars['ID']>,
  contentItemId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId?: Maybe<Scalars['ID']>,
  contentItemVersionId_not?: Maybe<Scalars['ID']>,
  contentItemVersionId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  displayText?: Maybe<Scalars['String']>,
  displayText_not?: Maybe<Scalars['String']>,
  displayText_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_contains?: Maybe<Scalars['String']>,
  displayText_not_contains?: Maybe<Scalars['String']>,
  displayText_starts_with?: Maybe<Scalars['String']>,
  displayText_not_starts_with?: Maybe<Scalars['String']>,
  displayText_ends_with?: Maybe<Scalars['String']>,
  displayText_not_ends_with?: Maybe<Scalars['String']>,
  createdUtc?: Maybe<Scalars['DateTime']>,
  createdUtc_not?: Maybe<Scalars['DateTime']>,
  createdUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_gt?: Maybe<Scalars['DateTime']>,
  createdUtc_gte?: Maybe<Scalars['DateTime']>,
  createdUtc_lt?: Maybe<Scalars['DateTime']>,
  createdUtc_lte?: Maybe<Scalars['DateTime']>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  modifiedUtc_not?: Maybe<Scalars['DateTime']>,
  modifiedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_gt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_gte?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lte?: Maybe<Scalars['DateTime']>,
  publishedUtc?: Maybe<Scalars['DateTime']>,
  publishedUtc_not?: Maybe<Scalars['DateTime']>,
  publishedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_gt?: Maybe<Scalars['DateTime']>,
  publishedUtc_gte?: Maybe<Scalars['DateTime']>,
  publishedUtc_lt?: Maybe<Scalars['DateTime']>,
  publishedUtc_lte?: Maybe<Scalars['DateTime']>,
  owner?: Maybe<Scalars['String']>,
  owner_not?: Maybe<Scalars['String']>,
  owner_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_contains?: Maybe<Scalars['String']>,
  owner_not_contains?: Maybe<Scalars['String']>,
  owner_starts_with?: Maybe<Scalars['String']>,
  owner_not_starts_with?: Maybe<Scalars['String']>,
  owner_ends_with?: Maybe<Scalars['String']>,
  owner_not_ends_with?: Maybe<Scalars['String']>,
  author?: Maybe<Scalars['String']>,
  author_not?: Maybe<Scalars['String']>,
  author_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_contains?: Maybe<Scalars['String']>,
  author_not_contains?: Maybe<Scalars['String']>,
  author_starts_with?: Maybe<Scalars['String']>,
  author_not_starts_with?: Maybe<Scalars['String']>,
  author_ends_with?: Maybe<Scalars['String']>,
  author_not_ends_with?: Maybe<Scalars['String']>,
  OR?: Maybe<Array<Maybe<MenuWhereInput>>>,
  AND?: Maybe<Array<Maybe<MenuWhereInput>>>,
  NOT?: Maybe<Array<Maybe<MenuWhereInput>>>,
  alias?: Maybe<AliasPartInput>,
};


export enum OrderByDirection {
  Asc = 'ASC',
  Desc = 'DESC'
}

export type Page = ContentItem & {
   __typename?: 'Page',
  author: Scalars['String'],
  contentItemId: Scalars['String'],
  contentItemVersionId: Scalars['String'],
  contentType: Scalars['String'],
  createdUtc?: Maybe<Scalars['DateTime']>,
  displayText: Scalars['String'],
  flow?: Maybe<FlowPart>,
  latest: Scalars['Boolean'],
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  owner: Scalars['String'],
  path: Scalars['String'],
  published: Scalars['Boolean'],
  publishedUtc?: Maybe<Scalars['DateTime']>,
  render?: Maybe<Scalars['String']>,
};

export type PageOrderByInput = {
  contentItemId?: Maybe<OrderByDirection>,
  contentItemVersionId?: Maybe<OrderByDirection>,
  contentType?: Maybe<OrderByDirection>,
  displayText?: Maybe<OrderByDirection>,
  published?: Maybe<OrderByDirection>,
  latest?: Maybe<OrderByDirection>,
  createdUtc?: Maybe<OrderByDirection>,
  modifiedUtc?: Maybe<OrderByDirection>,
  publishedUtc?: Maybe<OrderByDirection>,
  owner?: Maybe<OrderByDirection>,
  author?: Maybe<OrderByDirection>,
};

export type PageWhereInput = {
  contentItemId?: Maybe<Scalars['ID']>,
  contentItemId_not?: Maybe<Scalars['ID']>,
  contentItemId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId?: Maybe<Scalars['ID']>,
  contentItemVersionId_not?: Maybe<Scalars['ID']>,
  contentItemVersionId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  displayText?: Maybe<Scalars['String']>,
  displayText_not?: Maybe<Scalars['String']>,
  displayText_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_contains?: Maybe<Scalars['String']>,
  displayText_not_contains?: Maybe<Scalars['String']>,
  displayText_starts_with?: Maybe<Scalars['String']>,
  displayText_not_starts_with?: Maybe<Scalars['String']>,
  displayText_ends_with?: Maybe<Scalars['String']>,
  displayText_not_ends_with?: Maybe<Scalars['String']>,
  createdUtc?: Maybe<Scalars['DateTime']>,
  createdUtc_not?: Maybe<Scalars['DateTime']>,
  createdUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_gt?: Maybe<Scalars['DateTime']>,
  createdUtc_gte?: Maybe<Scalars['DateTime']>,
  createdUtc_lt?: Maybe<Scalars['DateTime']>,
  createdUtc_lte?: Maybe<Scalars['DateTime']>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  modifiedUtc_not?: Maybe<Scalars['DateTime']>,
  modifiedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_gt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_gte?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lte?: Maybe<Scalars['DateTime']>,
  publishedUtc?: Maybe<Scalars['DateTime']>,
  publishedUtc_not?: Maybe<Scalars['DateTime']>,
  publishedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_gt?: Maybe<Scalars['DateTime']>,
  publishedUtc_gte?: Maybe<Scalars['DateTime']>,
  publishedUtc_lt?: Maybe<Scalars['DateTime']>,
  publishedUtc_lte?: Maybe<Scalars['DateTime']>,
  owner?: Maybe<Scalars['String']>,
  owner_not?: Maybe<Scalars['String']>,
  owner_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_contains?: Maybe<Scalars['String']>,
  owner_not_contains?: Maybe<Scalars['String']>,
  owner_starts_with?: Maybe<Scalars['String']>,
  owner_not_starts_with?: Maybe<Scalars['String']>,
  owner_ends_with?: Maybe<Scalars['String']>,
  owner_not_ends_with?: Maybe<Scalars['String']>,
  author?: Maybe<Scalars['String']>,
  author_not?: Maybe<Scalars['String']>,
  author_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_contains?: Maybe<Scalars['String']>,
  author_not_contains?: Maybe<Scalars['String']>,
  author_starts_with?: Maybe<Scalars['String']>,
  author_not_starts_with?: Maybe<Scalars['String']>,
  author_ends_with?: Maybe<Scalars['String']>,
  author_not_ends_with?: Maybe<Scalars['String']>,
  OR?: Maybe<Array<Maybe<PageWhereInput>>>,
  AND?: Maybe<Array<Maybe<PageWhereInput>>>,
  NOT?: Maybe<Array<Maybe<PageWhereInput>>>,
  path?: Maybe<Scalars['String']>,
  path_not?: Maybe<Scalars['String']>,
  path_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  path_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  path_contains?: Maybe<Scalars['String']>,
  path_not_contains?: Maybe<Scalars['String']>,
  path_starts_with?: Maybe<Scalars['String']>,
  path_not_starts_with?: Maybe<Scalars['String']>,
  path_ends_with?: Maybe<Scalars['String']>,
  path_not_ends_with?: Maybe<Scalars['String']>,
};

export type Paragraph = ContentItem & {
   __typename?: 'Paragraph',
  author: Scalars['String'],
  content?: Maybe<Scalars['String']>,
  contentItemId: Scalars['String'],
  contentItemVersionId: Scalars['String'],
  contentType: Scalars['String'],
  createdUtc?: Maybe<Scalars['DateTime']>,
  displayText: Scalars['String'],
  latest: Scalars['Boolean'],
  metadata?: Maybe<FlowMetadata>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  owner: Scalars['String'],
  published: Scalars['Boolean'],
  publishedUtc?: Maybe<Scalars['DateTime']>,
  render?: Maybe<Scalars['String']>,
};

export type ParagraphOrderByInput = {
  contentItemId?: Maybe<OrderByDirection>,
  contentItemVersionId?: Maybe<OrderByDirection>,
  contentType?: Maybe<OrderByDirection>,
  displayText?: Maybe<OrderByDirection>,
  published?: Maybe<OrderByDirection>,
  latest?: Maybe<OrderByDirection>,
  createdUtc?: Maybe<OrderByDirection>,
  modifiedUtc?: Maybe<OrderByDirection>,
  publishedUtc?: Maybe<OrderByDirection>,
  owner?: Maybe<OrderByDirection>,
  author?: Maybe<OrderByDirection>,
};

export type ParagraphWhereInput = {
  contentItemId?: Maybe<Scalars['ID']>,
  contentItemId_not?: Maybe<Scalars['ID']>,
  contentItemId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId?: Maybe<Scalars['ID']>,
  contentItemVersionId_not?: Maybe<Scalars['ID']>,
  contentItemVersionId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  displayText?: Maybe<Scalars['String']>,
  displayText_not?: Maybe<Scalars['String']>,
  displayText_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_contains?: Maybe<Scalars['String']>,
  displayText_not_contains?: Maybe<Scalars['String']>,
  displayText_starts_with?: Maybe<Scalars['String']>,
  displayText_not_starts_with?: Maybe<Scalars['String']>,
  displayText_ends_with?: Maybe<Scalars['String']>,
  displayText_not_ends_with?: Maybe<Scalars['String']>,
  createdUtc?: Maybe<Scalars['DateTime']>,
  createdUtc_not?: Maybe<Scalars['DateTime']>,
  createdUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_gt?: Maybe<Scalars['DateTime']>,
  createdUtc_gte?: Maybe<Scalars['DateTime']>,
  createdUtc_lt?: Maybe<Scalars['DateTime']>,
  createdUtc_lte?: Maybe<Scalars['DateTime']>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  modifiedUtc_not?: Maybe<Scalars['DateTime']>,
  modifiedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_gt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_gte?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lte?: Maybe<Scalars['DateTime']>,
  publishedUtc?: Maybe<Scalars['DateTime']>,
  publishedUtc_not?: Maybe<Scalars['DateTime']>,
  publishedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_gt?: Maybe<Scalars['DateTime']>,
  publishedUtc_gte?: Maybe<Scalars['DateTime']>,
  publishedUtc_lt?: Maybe<Scalars['DateTime']>,
  publishedUtc_lte?: Maybe<Scalars['DateTime']>,
  owner?: Maybe<Scalars['String']>,
  owner_not?: Maybe<Scalars['String']>,
  owner_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_contains?: Maybe<Scalars['String']>,
  owner_not_contains?: Maybe<Scalars['String']>,
  owner_starts_with?: Maybe<Scalars['String']>,
  owner_not_starts_with?: Maybe<Scalars['String']>,
  owner_ends_with?: Maybe<Scalars['String']>,
  owner_not_ends_with?: Maybe<Scalars['String']>,
  author?: Maybe<Scalars['String']>,
  author_not?: Maybe<Scalars['String']>,
  author_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_contains?: Maybe<Scalars['String']>,
  author_not_contains?: Maybe<Scalars['String']>,
  author_starts_with?: Maybe<Scalars['String']>,
  author_not_starts_with?: Maybe<Scalars['String']>,
  author_ends_with?: Maybe<Scalars['String']>,
  author_not_ends_with?: Maybe<Scalars['String']>,
  OR?: Maybe<Array<Maybe<ParagraphWhereInput>>>,
  AND?: Maybe<Array<Maybe<ParagraphWhereInput>>>,
  NOT?: Maybe<Array<Maybe<ParagraphWhereInput>>>,
};

export type Query = {
   __typename?: 'Query',
  article?: Maybe<Array<Maybe<Article>>>,
  blog?: Maybe<Array<Maybe<Blog>>>,
  blogPost?: Maybe<Array<Maybe<BlogPost>>>,
  contentItem?: Maybe<ContentItem>,
  image?: Maybe<Array<Maybe<Image>>>,
  liquidPage?: Maybe<Array<Maybe<LiquidPage>>>,
  mediaAssets?: Maybe<Array<Maybe<MediaAsset>>>,
  menu?: Maybe<Array<Maybe<Menu>>>,
  page?: Maybe<Array<Maybe<Page>>>,
  recentBlogPosts?: Maybe<Array<Maybe<BlogPost>>>,
  searchBlogPosts?: Maybe<Array<Maybe<BlogPost>>>,
  siteLayers?: Maybe<Array<Maybe<Layer>>>,
};


export type QueryArticleArgs = {
  where?: Maybe<ArticleWhereInput>,
  orderBy?: Maybe<ArticleOrderByInput>,
  first?: Maybe<Scalars['Int']>,
  skip?: Maybe<Scalars['Int']>,
  status?: Maybe<Status>
};


export type QueryBlogArgs = {
  where?: Maybe<BlogWhereInput>,
  orderBy?: Maybe<BlogOrderByInput>,
  first?: Maybe<Scalars['Int']>,
  skip?: Maybe<Scalars['Int']>,
  status?: Maybe<Status>
};


export type QueryBlogPostArgs = {
  where?: Maybe<BlogPostWhereInput>,
  orderBy?: Maybe<BlogPostOrderByInput>,
  first?: Maybe<Scalars['Int']>,
  skip?: Maybe<Scalars['Int']>,
  status?: Maybe<Status>
};


export type QueryContentItemArgs = {
  contentItemId: Scalars['String']
};


export type QueryImageArgs = {
  where?: Maybe<ImageWhereInput>,
  orderBy?: Maybe<ImageOrderByInput>,
  first?: Maybe<Scalars['Int']>,
  skip?: Maybe<Scalars['Int']>,
  status?: Maybe<Status>
};


export type QueryLiquidPageArgs = {
  where?: Maybe<LiquidPageWhereInput>,
  orderBy?: Maybe<LiquidPageOrderByInput>,
  first?: Maybe<Scalars['Int']>,
  skip?: Maybe<Scalars['Int']>,
  status?: Maybe<Status>
};


export type QueryMediaAssetsArgs = {
  path?: Maybe<Scalars['String']>,
  includeSubDirectories?: Maybe<Scalars['Boolean']>
};


export type QueryMenuArgs = {
  where?: Maybe<MenuWhereInput>,
  orderBy?: Maybe<MenuOrderByInput>,
  first?: Maybe<Scalars['Int']>,
  skip?: Maybe<Scalars['Int']>,
  status?: Maybe<Status>
};


export type QueryPageArgs = {
  where?: Maybe<PageWhereInput>,
  orderBy?: Maybe<PageOrderByInput>,
  first?: Maybe<Scalars['Int']>,
  skip?: Maybe<Scalars['Int']>,
  status?: Maybe<Status>
};


export type QueryRecentBlogPostsArgs = {
  parameters?: Maybe<Scalars['String']>
};


export type QuerySearchBlogPostsArgs = {
  parameters?: Maybe<Scalars['String']>
};

export type RawHtml = ContentItem & {
   __typename?: 'RawHtml',
  author: Scalars['String'],
  content?: Maybe<Scalars['String']>,
  contentItemId: Scalars['String'],
  contentItemVersionId: Scalars['String'],
  contentType: Scalars['String'],
  createdUtc?: Maybe<Scalars['DateTime']>,
  displayText: Scalars['String'],
  latest: Scalars['Boolean'],
  metadata?: Maybe<FlowMetadata>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  owner: Scalars['String'],
  published: Scalars['Boolean'],
  publishedUtc?: Maybe<Scalars['DateTime']>,
  render?: Maybe<Scalars['String']>,
};

export type RawHtmlOrderByInput = {
  contentItemId?: Maybe<OrderByDirection>,
  contentItemVersionId?: Maybe<OrderByDirection>,
  contentType?: Maybe<OrderByDirection>,
  displayText?: Maybe<OrderByDirection>,
  published?: Maybe<OrderByDirection>,
  latest?: Maybe<OrderByDirection>,
  createdUtc?: Maybe<OrderByDirection>,
  modifiedUtc?: Maybe<OrderByDirection>,
  publishedUtc?: Maybe<OrderByDirection>,
  owner?: Maybe<OrderByDirection>,
  author?: Maybe<OrderByDirection>,
};

export type RawHtmlWhereInput = {
  contentItemId?: Maybe<Scalars['ID']>,
  contentItemId_not?: Maybe<Scalars['ID']>,
  contentItemId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId?: Maybe<Scalars['ID']>,
  contentItemVersionId_not?: Maybe<Scalars['ID']>,
  contentItemVersionId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  displayText?: Maybe<Scalars['String']>,
  displayText_not?: Maybe<Scalars['String']>,
  displayText_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_contains?: Maybe<Scalars['String']>,
  displayText_not_contains?: Maybe<Scalars['String']>,
  displayText_starts_with?: Maybe<Scalars['String']>,
  displayText_not_starts_with?: Maybe<Scalars['String']>,
  displayText_ends_with?: Maybe<Scalars['String']>,
  displayText_not_ends_with?: Maybe<Scalars['String']>,
  createdUtc?: Maybe<Scalars['DateTime']>,
  createdUtc_not?: Maybe<Scalars['DateTime']>,
  createdUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_gt?: Maybe<Scalars['DateTime']>,
  createdUtc_gte?: Maybe<Scalars['DateTime']>,
  createdUtc_lt?: Maybe<Scalars['DateTime']>,
  createdUtc_lte?: Maybe<Scalars['DateTime']>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  modifiedUtc_not?: Maybe<Scalars['DateTime']>,
  modifiedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_gt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_gte?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lte?: Maybe<Scalars['DateTime']>,
  publishedUtc?: Maybe<Scalars['DateTime']>,
  publishedUtc_not?: Maybe<Scalars['DateTime']>,
  publishedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_gt?: Maybe<Scalars['DateTime']>,
  publishedUtc_gte?: Maybe<Scalars['DateTime']>,
  publishedUtc_lt?: Maybe<Scalars['DateTime']>,
  publishedUtc_lte?: Maybe<Scalars['DateTime']>,
  owner?: Maybe<Scalars['String']>,
  owner_not?: Maybe<Scalars['String']>,
  owner_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_contains?: Maybe<Scalars['String']>,
  owner_not_contains?: Maybe<Scalars['String']>,
  owner_starts_with?: Maybe<Scalars['String']>,
  owner_not_starts_with?: Maybe<Scalars['String']>,
  owner_ends_with?: Maybe<Scalars['String']>,
  owner_not_ends_with?: Maybe<Scalars['String']>,
  author?: Maybe<Scalars['String']>,
  author_not?: Maybe<Scalars['String']>,
  author_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_contains?: Maybe<Scalars['String']>,
  author_not_contains?: Maybe<Scalars['String']>,
  author_starts_with?: Maybe<Scalars['String']>,
  author_not_starts_with?: Maybe<Scalars['String']>,
  author_ends_with?: Maybe<Scalars['String']>,
  author_not_ends_with?: Maybe<Scalars['String']>,
  OR?: Maybe<Array<Maybe<RawHtmlWhereInput>>>,
  AND?: Maybe<Array<Maybe<RawHtmlWhereInput>>>,
  NOT?: Maybe<Array<Maybe<RawHtmlWhereInput>>>,
};


export type Select = ContentItem & {
   __typename?: 'Select',
  author: Scalars['String'],
  contentItemId: Scalars['String'],
  contentItemVersionId: Scalars['String'],
  contentType: Scalars['String'],
  createdUtc?: Maybe<Scalars['DateTime']>,
  displayText: Scalars['String'],
  formElement?: Maybe<FormElementPart>,
  formInputElement?: Maybe<FormInputElementPart>,
  latest: Scalars['Boolean'],
  metadata?: Maybe<FlowMetadata>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  owner: Scalars['String'],
  published: Scalars['Boolean'],
  publishedUtc?: Maybe<Scalars['DateTime']>,
  render?: Maybe<Scalars['String']>,
};

export type SelectOrderByInput = {
  contentItemId?: Maybe<OrderByDirection>,
  contentItemVersionId?: Maybe<OrderByDirection>,
  contentType?: Maybe<OrderByDirection>,
  displayText?: Maybe<OrderByDirection>,
  published?: Maybe<OrderByDirection>,
  latest?: Maybe<OrderByDirection>,
  createdUtc?: Maybe<OrderByDirection>,
  modifiedUtc?: Maybe<OrderByDirection>,
  publishedUtc?: Maybe<OrderByDirection>,
  owner?: Maybe<OrderByDirection>,
  author?: Maybe<OrderByDirection>,
};

export type SelectWhereInput = {
  contentItemId?: Maybe<Scalars['ID']>,
  contentItemId_not?: Maybe<Scalars['ID']>,
  contentItemId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId?: Maybe<Scalars['ID']>,
  contentItemVersionId_not?: Maybe<Scalars['ID']>,
  contentItemVersionId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  displayText?: Maybe<Scalars['String']>,
  displayText_not?: Maybe<Scalars['String']>,
  displayText_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_contains?: Maybe<Scalars['String']>,
  displayText_not_contains?: Maybe<Scalars['String']>,
  displayText_starts_with?: Maybe<Scalars['String']>,
  displayText_not_starts_with?: Maybe<Scalars['String']>,
  displayText_ends_with?: Maybe<Scalars['String']>,
  displayText_not_ends_with?: Maybe<Scalars['String']>,
  createdUtc?: Maybe<Scalars['DateTime']>,
  createdUtc_not?: Maybe<Scalars['DateTime']>,
  createdUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_gt?: Maybe<Scalars['DateTime']>,
  createdUtc_gte?: Maybe<Scalars['DateTime']>,
  createdUtc_lt?: Maybe<Scalars['DateTime']>,
  createdUtc_lte?: Maybe<Scalars['DateTime']>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  modifiedUtc_not?: Maybe<Scalars['DateTime']>,
  modifiedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_gt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_gte?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lte?: Maybe<Scalars['DateTime']>,
  publishedUtc?: Maybe<Scalars['DateTime']>,
  publishedUtc_not?: Maybe<Scalars['DateTime']>,
  publishedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_gt?: Maybe<Scalars['DateTime']>,
  publishedUtc_gte?: Maybe<Scalars['DateTime']>,
  publishedUtc_lt?: Maybe<Scalars['DateTime']>,
  publishedUtc_lte?: Maybe<Scalars['DateTime']>,
  owner?: Maybe<Scalars['String']>,
  owner_not?: Maybe<Scalars['String']>,
  owner_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_contains?: Maybe<Scalars['String']>,
  owner_not_contains?: Maybe<Scalars['String']>,
  owner_starts_with?: Maybe<Scalars['String']>,
  owner_not_starts_with?: Maybe<Scalars['String']>,
  owner_ends_with?: Maybe<Scalars['String']>,
  owner_not_ends_with?: Maybe<Scalars['String']>,
  author?: Maybe<Scalars['String']>,
  author_not?: Maybe<Scalars['String']>,
  author_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_contains?: Maybe<Scalars['String']>,
  author_not_contains?: Maybe<Scalars['String']>,
  author_starts_with?: Maybe<Scalars['String']>,
  author_not_starts_with?: Maybe<Scalars['String']>,
  author_ends_with?: Maybe<Scalars['String']>,
  author_not_ends_with?: Maybe<Scalars['String']>,
  OR?: Maybe<Array<Maybe<SelectWhereInput>>>,
  AND?: Maybe<Array<Maybe<SelectWhereInput>>>,
  NOT?: Maybe<Array<Maybe<SelectWhereInput>>>,
};

export enum Status {
  Published = 'PUBLISHED',
  Draft = 'DRAFT',
  Latest = 'LATEST',
  All = 'ALL'
}

export type TextArea = ContentItem & {
   __typename?: 'TextArea',
  author: Scalars['String'],
  contentItemId: Scalars['String'],
  contentItemVersionId: Scalars['String'],
  contentType: Scalars['String'],
  createdUtc?: Maybe<Scalars['DateTime']>,
  displayText: Scalars['String'],
  formElement?: Maybe<FormElementPart>,
  formInputElement?: Maybe<FormInputElementPart>,
  latest: Scalars['Boolean'],
  metadata?: Maybe<FlowMetadata>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  owner: Scalars['String'],
  published: Scalars['Boolean'],
  publishedUtc?: Maybe<Scalars['DateTime']>,
  render?: Maybe<Scalars['String']>,
  textArea?: Maybe<TextAreaPart>,
};

export type TextAreaOrderByInput = {
  contentItemId?: Maybe<OrderByDirection>,
  contentItemVersionId?: Maybe<OrderByDirection>,
  contentType?: Maybe<OrderByDirection>,
  displayText?: Maybe<OrderByDirection>,
  published?: Maybe<OrderByDirection>,
  latest?: Maybe<OrderByDirection>,
  createdUtc?: Maybe<OrderByDirection>,
  modifiedUtc?: Maybe<OrderByDirection>,
  publishedUtc?: Maybe<OrderByDirection>,
  owner?: Maybe<OrderByDirection>,
  author?: Maybe<OrderByDirection>,
};

export type TextAreaPart = {
   __typename?: 'TextAreaPart',
  defaultValue?: Maybe<Scalars['String']>,
  placeholder?: Maybe<Scalars['String']>,
};

export type TextAreaWhereInput = {
  contentItemId?: Maybe<Scalars['ID']>,
  contentItemId_not?: Maybe<Scalars['ID']>,
  contentItemId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId?: Maybe<Scalars['ID']>,
  contentItemVersionId_not?: Maybe<Scalars['ID']>,
  contentItemVersionId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  displayText?: Maybe<Scalars['String']>,
  displayText_not?: Maybe<Scalars['String']>,
  displayText_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_contains?: Maybe<Scalars['String']>,
  displayText_not_contains?: Maybe<Scalars['String']>,
  displayText_starts_with?: Maybe<Scalars['String']>,
  displayText_not_starts_with?: Maybe<Scalars['String']>,
  displayText_ends_with?: Maybe<Scalars['String']>,
  displayText_not_ends_with?: Maybe<Scalars['String']>,
  createdUtc?: Maybe<Scalars['DateTime']>,
  createdUtc_not?: Maybe<Scalars['DateTime']>,
  createdUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_gt?: Maybe<Scalars['DateTime']>,
  createdUtc_gte?: Maybe<Scalars['DateTime']>,
  createdUtc_lt?: Maybe<Scalars['DateTime']>,
  createdUtc_lte?: Maybe<Scalars['DateTime']>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  modifiedUtc_not?: Maybe<Scalars['DateTime']>,
  modifiedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_gt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_gte?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lte?: Maybe<Scalars['DateTime']>,
  publishedUtc?: Maybe<Scalars['DateTime']>,
  publishedUtc_not?: Maybe<Scalars['DateTime']>,
  publishedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_gt?: Maybe<Scalars['DateTime']>,
  publishedUtc_gte?: Maybe<Scalars['DateTime']>,
  publishedUtc_lt?: Maybe<Scalars['DateTime']>,
  publishedUtc_lte?: Maybe<Scalars['DateTime']>,
  owner?: Maybe<Scalars['String']>,
  owner_not?: Maybe<Scalars['String']>,
  owner_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_contains?: Maybe<Scalars['String']>,
  owner_not_contains?: Maybe<Scalars['String']>,
  owner_starts_with?: Maybe<Scalars['String']>,
  owner_not_starts_with?: Maybe<Scalars['String']>,
  owner_ends_with?: Maybe<Scalars['String']>,
  owner_not_ends_with?: Maybe<Scalars['String']>,
  author?: Maybe<Scalars['String']>,
  author_not?: Maybe<Scalars['String']>,
  author_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_contains?: Maybe<Scalars['String']>,
  author_not_contains?: Maybe<Scalars['String']>,
  author_starts_with?: Maybe<Scalars['String']>,
  author_not_starts_with?: Maybe<Scalars['String']>,
  author_ends_with?: Maybe<Scalars['String']>,
  author_not_ends_with?: Maybe<Scalars['String']>,
  OR?: Maybe<Array<Maybe<TextAreaWhereInput>>>,
  AND?: Maybe<Array<Maybe<TextAreaWhereInput>>>,
  NOT?: Maybe<Array<Maybe<TextAreaWhereInput>>>,
};

export type Validation = ContentItem & {
   __typename?: 'Validation',
  author: Scalars['String'],
  contentItemId: Scalars['String'],
  contentItemVersionId: Scalars['String'],
  contentType: Scalars['String'],
  createdUtc?: Maybe<Scalars['DateTime']>,
  displayText: Scalars['String'],
  latest: Scalars['Boolean'],
  metadata?: Maybe<FlowMetadata>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  owner: Scalars['String'],
  published: Scalars['Boolean'],
  publishedUtc?: Maybe<Scalars['DateTime']>,
  render?: Maybe<Scalars['String']>,
  validation?: Maybe<ValidationPart>,
};

export type ValidationOrderByInput = {
  contentItemId?: Maybe<OrderByDirection>,
  contentItemVersionId?: Maybe<OrderByDirection>,
  contentType?: Maybe<OrderByDirection>,
  displayText?: Maybe<OrderByDirection>,
  published?: Maybe<OrderByDirection>,
  latest?: Maybe<OrderByDirection>,
  createdUtc?: Maybe<OrderByDirection>,
  modifiedUtc?: Maybe<OrderByDirection>,
  publishedUtc?: Maybe<OrderByDirection>,
  owner?: Maybe<OrderByDirection>,
  author?: Maybe<OrderByDirection>,
};

export type ValidationPart = {
   __typename?: 'ValidationPart',
  for?: Maybe<Scalars['String']>,
};

export type ValidationSummary = ContentItem & {
   __typename?: 'ValidationSummary',
  author: Scalars['String'],
  contentItemId: Scalars['String'],
  contentItemVersionId: Scalars['String'],
  contentType: Scalars['String'],
  createdUtc?: Maybe<Scalars['DateTime']>,
  displayText: Scalars['String'],
  latest: Scalars['Boolean'],
  metadata?: Maybe<FlowMetadata>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  owner: Scalars['String'],
  published: Scalars['Boolean'],
  publishedUtc?: Maybe<Scalars['DateTime']>,
  render?: Maybe<Scalars['String']>,
};

export type ValidationSummaryOrderByInput = {
  contentItemId?: Maybe<OrderByDirection>,
  contentItemVersionId?: Maybe<OrderByDirection>,
  contentType?: Maybe<OrderByDirection>,
  displayText?: Maybe<OrderByDirection>,
  published?: Maybe<OrderByDirection>,
  latest?: Maybe<OrderByDirection>,
  createdUtc?: Maybe<OrderByDirection>,
  modifiedUtc?: Maybe<OrderByDirection>,
  publishedUtc?: Maybe<OrderByDirection>,
  owner?: Maybe<OrderByDirection>,
  author?: Maybe<OrderByDirection>,
};

export type ValidationSummaryWhereInput = {
  contentItemId?: Maybe<Scalars['ID']>,
  contentItemId_not?: Maybe<Scalars['ID']>,
  contentItemId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId?: Maybe<Scalars['ID']>,
  contentItemVersionId_not?: Maybe<Scalars['ID']>,
  contentItemVersionId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  displayText?: Maybe<Scalars['String']>,
  displayText_not?: Maybe<Scalars['String']>,
  displayText_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_contains?: Maybe<Scalars['String']>,
  displayText_not_contains?: Maybe<Scalars['String']>,
  displayText_starts_with?: Maybe<Scalars['String']>,
  displayText_not_starts_with?: Maybe<Scalars['String']>,
  displayText_ends_with?: Maybe<Scalars['String']>,
  displayText_not_ends_with?: Maybe<Scalars['String']>,
  createdUtc?: Maybe<Scalars['DateTime']>,
  createdUtc_not?: Maybe<Scalars['DateTime']>,
  createdUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_gt?: Maybe<Scalars['DateTime']>,
  createdUtc_gte?: Maybe<Scalars['DateTime']>,
  createdUtc_lt?: Maybe<Scalars['DateTime']>,
  createdUtc_lte?: Maybe<Scalars['DateTime']>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  modifiedUtc_not?: Maybe<Scalars['DateTime']>,
  modifiedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_gt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_gte?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lte?: Maybe<Scalars['DateTime']>,
  publishedUtc?: Maybe<Scalars['DateTime']>,
  publishedUtc_not?: Maybe<Scalars['DateTime']>,
  publishedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_gt?: Maybe<Scalars['DateTime']>,
  publishedUtc_gte?: Maybe<Scalars['DateTime']>,
  publishedUtc_lt?: Maybe<Scalars['DateTime']>,
  publishedUtc_lte?: Maybe<Scalars['DateTime']>,
  owner?: Maybe<Scalars['String']>,
  owner_not?: Maybe<Scalars['String']>,
  owner_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_contains?: Maybe<Scalars['String']>,
  owner_not_contains?: Maybe<Scalars['String']>,
  owner_starts_with?: Maybe<Scalars['String']>,
  owner_not_starts_with?: Maybe<Scalars['String']>,
  owner_ends_with?: Maybe<Scalars['String']>,
  owner_not_ends_with?: Maybe<Scalars['String']>,
  author?: Maybe<Scalars['String']>,
  author_not?: Maybe<Scalars['String']>,
  author_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_contains?: Maybe<Scalars['String']>,
  author_not_contains?: Maybe<Scalars['String']>,
  author_starts_with?: Maybe<Scalars['String']>,
  author_not_starts_with?: Maybe<Scalars['String']>,
  author_ends_with?: Maybe<Scalars['String']>,
  author_not_ends_with?: Maybe<Scalars['String']>,
  OR?: Maybe<Array<Maybe<ValidationSummaryWhereInput>>>,
  AND?: Maybe<Array<Maybe<ValidationSummaryWhereInput>>>,
  NOT?: Maybe<Array<Maybe<ValidationSummaryWhereInput>>>,
};

export type ValidationWhereInput = {
  contentItemId?: Maybe<Scalars['ID']>,
  contentItemId_not?: Maybe<Scalars['ID']>,
  contentItemId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId?: Maybe<Scalars['ID']>,
  contentItemVersionId_not?: Maybe<Scalars['ID']>,
  contentItemVersionId_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  contentItemVersionId_not_in?: Maybe<Array<Maybe<Scalars['ID']>>>,
  displayText?: Maybe<Scalars['String']>,
  displayText_not?: Maybe<Scalars['String']>,
  displayText_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  displayText_contains?: Maybe<Scalars['String']>,
  displayText_not_contains?: Maybe<Scalars['String']>,
  displayText_starts_with?: Maybe<Scalars['String']>,
  displayText_not_starts_with?: Maybe<Scalars['String']>,
  displayText_ends_with?: Maybe<Scalars['String']>,
  displayText_not_ends_with?: Maybe<Scalars['String']>,
  createdUtc?: Maybe<Scalars['DateTime']>,
  createdUtc_not?: Maybe<Scalars['DateTime']>,
  createdUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  createdUtc_gt?: Maybe<Scalars['DateTime']>,
  createdUtc_gte?: Maybe<Scalars['DateTime']>,
  createdUtc_lt?: Maybe<Scalars['DateTime']>,
  createdUtc_lte?: Maybe<Scalars['DateTime']>,
  modifiedUtc?: Maybe<Scalars['DateTime']>,
  modifiedUtc_not?: Maybe<Scalars['DateTime']>,
  modifiedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  modifiedUtc_gt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_gte?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lt?: Maybe<Scalars['DateTime']>,
  modifiedUtc_lte?: Maybe<Scalars['DateTime']>,
  publishedUtc?: Maybe<Scalars['DateTime']>,
  publishedUtc_not?: Maybe<Scalars['DateTime']>,
  publishedUtc_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_not_in?: Maybe<Array<Maybe<Scalars['DateTime']>>>,
  publishedUtc_gt?: Maybe<Scalars['DateTime']>,
  publishedUtc_gte?: Maybe<Scalars['DateTime']>,
  publishedUtc_lt?: Maybe<Scalars['DateTime']>,
  publishedUtc_lte?: Maybe<Scalars['DateTime']>,
  owner?: Maybe<Scalars['String']>,
  owner_not?: Maybe<Scalars['String']>,
  owner_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  owner_contains?: Maybe<Scalars['String']>,
  owner_not_contains?: Maybe<Scalars['String']>,
  owner_starts_with?: Maybe<Scalars['String']>,
  owner_not_starts_with?: Maybe<Scalars['String']>,
  owner_ends_with?: Maybe<Scalars['String']>,
  owner_not_ends_with?: Maybe<Scalars['String']>,
  author?: Maybe<Scalars['String']>,
  author_not?: Maybe<Scalars['String']>,
  author_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_not_in?: Maybe<Array<Maybe<Scalars['String']>>>,
  author_contains?: Maybe<Scalars['String']>,
  author_not_contains?: Maybe<Scalars['String']>,
  author_starts_with?: Maybe<Scalars['String']>,
  author_not_starts_with?: Maybe<Scalars['String']>,
  author_ends_with?: Maybe<Scalars['String']>,
  author_not_ends_with?: Maybe<Scalars['String']>,
  OR?: Maybe<Array<Maybe<ValidationWhereInput>>>,
  AND?: Maybe<Array<Maybe<ValidationWhereInput>>>,
  NOT?: Maybe<Array<Maybe<ValidationWhereInput>>>,
};

export type BlogPostsQueryVariables = {};


export type BlogPostsQuery = (
  { __typename?: 'Query' }
  & { blogPost: Maybe<Array<Maybe<(
    { __typename?: 'BlogPost' }
    & Pick<BlogPost, 'path' | 'subtitle' | 'displayText' | 'owner' | 'publishedUtc'>
    & { markdownBody: Maybe<(
      { __typename?: 'MarkdownBodyPart' }
      & Pick<MarkdownBodyPart, 'markdown'>
    )>, image: Maybe<(
      { __typename?: 'MediaField' }
      & Pick<MediaField, 'urls'>
    )> }
  )>>> }
);

export type CurrentBlogQueryVariables = {
  urlPath?: Maybe<Scalars['String']>
};


export type CurrentBlogQuery = (
  { __typename?: 'Query' }
  & { blogPost: Maybe<Array<Maybe<(
    { __typename?: 'BlogPost' }
    & Pick<BlogPost, 'path' | 'subtitle' | 'displayText' | 'owner' | 'publishedUtc'>
    & { image: Maybe<(
      { __typename?: 'MediaField' }
      & Pick<MediaField, 'urls'>
    )>, markdownBody: Maybe<(
      { __typename?: 'MarkdownBodyPart' }
      & Pick<MarkdownBodyPart, 'markdown'>
    )> }
  )>>> }
);

export type SearchQueryQueryVariables = {
  parameters?: Maybe<Scalars['String']>
};


export type SearchQueryQuery = (
  { __typename?: 'Query' }
  & { searchBlogPosts: Maybe<Array<Maybe<(
    { __typename?: 'BlogPost' }
    & Pick<BlogPost, 'subtitle' | 'displayText' | 'path'>
    & { image: Maybe<(
      { __typename?: 'MediaField' }
      & Pick<MediaField, 'urls'>
    )> }
  )>>> }
);

export const BlogPostsDocument = gql`
    query BlogPosts {
  blogPost {
    path
    subtitle
    displayText
    owner
    publishedUtc
    markdownBody {
      markdown
    }
    image {
      urls
    }
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class BlogPostsGQL extends Apollo.Query<BlogPostsQuery, BlogPostsQueryVariables> {
    document = BlogPostsDocument;
    
  }
export const CurrentBlogDocument = gql`
    query currentBlog($urlPath: String) {
  blogPost(where: {path: $urlPath}) {
    path
    subtitle
    displayText
    owner
    publishedUtc
    image {
      urls
    }
    markdownBody {
      markdown
    }
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class CurrentBlogGQL extends Apollo.Query<CurrentBlogQuery, CurrentBlogQueryVariables> {
    document = CurrentBlogDocument;
    
  }
export const SearchQueryDocument = gql`
    query searchQuery($parameters: String) {
  searchBlogPosts(parameters: $parameters) {
    subtitle
    displayText
    path
    image {
      urls
    }
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class SearchQueryGQL extends Apollo.Query<SearchQueryQuery, SearchQueryQueryVariables> {
    document = SearchQueryDocument;
    
  }